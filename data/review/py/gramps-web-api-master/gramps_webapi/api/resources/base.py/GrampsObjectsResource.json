{"embedding": [0.09522926807403564, -0.34276124835014343, -1.5663142204284668, 0.16745619475841522, 0.20426352322101593, -0.3590708076953888, 0.2464914619922638, -0.21313238143920898, -0.01737193949520588, -0.7078945636749268, -0.17349006235599518, -0.1092543974518776, 0.2808310091495514, 0.3470040261745453, -0.04076474532485008, 0.29765334725379944, -0.5488130450248718, 0.3849219083786011, 0.7799901366233826, -0.31477978825569153, -0.2578214406967163, 0.26704901456832886, 0.5818897485733032, 0.37142354249954224, 0.09097026288509369, -0.11851680278778076, 0.8039219379425049, 0.30915093421936035, 0.2008161097764969, 0.5031709671020508, 0.3842836320400238, -0.47147467732429504, 0.59238600730896, 0.22220692038536072, -0.16947536170482635, -0.7867559194564819, 0.23309236764907837, 0.7379999160766602, -0.9274393320083618, 0.08947204053401947, -0.013551288284361362, 0.18304844200611115, 0.06198112294077873, -0.42587947845458984, 0.5025255084037781, 0.33018258213996887, -0.5318484306335449, 0.38086697459220886, -0.1004796102643013, -0.044210806488990784, 0.12221691757440567, -0.0120953768491745, -0.39495760202407837, 0.47479742765426636, -0.1998186856508255, 0.13479213416576385, -0.613788366317749, 1.3458820581436157, 0.11013542115688324, -0.21613344550132751, 0.22880658507347107, 0.22310449182987213, -0.06270422786474228, -0.5207264423370361, 0.1543234884738922, -0.22299905121326447, -0.30854469537734985, -0.33447280526161194, -0.029285727068781853, 0.19473642110824585, -0.6561218500137329, 0.2726472318172455, 0.5736435055732727, 0.3152676820755005, 0.12259981036186218, -0.2845601737499237, 0.6728518009185791, -0.020834675058722496, 0.18714284896850586, -0.38712701201438904, 0.6650638580322266, -0.166953906416893, -0.38490068912506104, -0.5750797390937805, 0.12818893790245056, -0.006022579036653042, 0.25069403648376465, -0.3101383447647095, -0.15864808857440948, -0.22943545877933502, -0.5359606146812439, 0.21121931076049805, -0.21572944521903992, 0.05289802327752113, -0.21788102388381958, -0.2562709450721741, -0.5713321566581726, -0.26820874214172363, -0.5634798407554626, -0.013434736989438534, -0.19880270957946777, -0.461559534072876, -0.4394516944885254, 0.1881013661623001, 0.5275460481643677, -0.7303750514984131, 0.06983393430709839, -0.5193454027175903, 0.2793924808502197, 0.3314977288246155, -0.5113997459411621, -0.20570369064807892, 0.10819782316684723, -0.07636111229658127, -0.26767346262931824, -0.1771191954612732, -0.25730347633361816, 0.19617047905921936, 0.2237139195203781, -1.1077076196670532, 0.07213933765888214, -0.3296755850315094, -0.48539191484451294, 0.4567594528198242, 0.841960608959198, 0.359341561794281, 0.3627210259437561, 0.25972989201545715, -0.09574344754219055, -0.09965736418962479, -0.28066566586494446, 0.273655503988266, -0.8897510766983032, -0.37197941541671753, 0.2671405076980591, -0.43094709515571594, -0.23473435640335083, -0.06831452250480652, -0.394782692193985, 0.45209670066833496, 0.028332140296697617, 0.13234634697437286, 0.3110153377056122, -0.2801799476146698, -0.7222919464111328, -0.06529565900564194, -0.0390368327498436, 0.2714340388774872, -0.22002068161964417, 0.19464236497879028, 0.08215061575174332, -0.3038877248764038, 0.2783927619457245, 0.24027714133262634, -0.47950583696365356, 0.28426456451416016, -0.7084113359451294, -0.831446647644043, -0.05682032182812691, -0.37434494495391846, -0.08481784909963608, -0.23119118809700012, -0.04925812408328056, -0.1788935512304306, -0.23953117430210114, -0.049693599343299866, 0.2616862952709198, -0.8541905879974365, -0.46246376633644104, 0.46113649010658264, 0.02621927112340927, -0.06972576677799225, -0.6343492865562439, -0.08899854123592377, -0.3414151668548584, 1.1722533702850342, 0.23787879943847656, 0.005999462679028511, -0.040655914694070816, 0.07083604484796524, -0.4204436242580414, -0.8013373613357544, 0.4705227315425873, -0.18645551800727844, 0.1259395182132721, 0.3318804204463959, -0.3290255665779114, 0.17869345843791962, 0.48652184009552, 0.8719807267189026, -0.13064563274383545, -0.0735657662153244, -0.050653066486120224, -0.21260744333267212, -0.6420060992240906, -0.05533570796251297, -0.44784218072891235, -0.05035282298922539, -0.256267786026001, 0.7458018064498901, -1.039692759513855, -0.18007288873195648, -0.220523402094841, -0.7929308414459229, -0.08056333661079407, 0.43160462379455566, 0.0011822788510471582, 0.021097226068377495, -0.259982168674469, -0.42395755648612976, -0.4419579803943634, 0.49429500102996826, -0.5585875511169434, -0.01321284007281065, 0.5667150020599365, -0.27517110109329224, 0.6439403891563416, -0.2004677653312683, -0.06092586740851402, 0.008961804211139679, 0.043928518891334534, -0.48115283250808716, -0.6713499426841736, -0.7512621283531189, -0.1867116540670395, -0.3112298548221588, 0.31948134303092957, 0.34254440665245056, 0.2615965008735657, -0.34891343116760254, -0.4062177836894989, -0.2502537667751312, 0.3081018030643463, 0.6215393543243408, 0.23142144083976746, 0.09449243545532227, 0.21776041388511658, 0.4766096770763397, -0.29976773262023926, 0.08222565054893494, -0.13942980766296387, 0.047167472541332245, -0.549294650554657, -0.4096432626247406, -0.36644941568374634, -0.1672181636095047, 0.18885590136051178, -0.3625645041465759, -0.12759581208229065, -0.6588708162307739, 0.2910730242729187, 0.176677405834198, 0.03146616742014885, -0.032823555171489716, -0.4963077902793884, -0.5014585256576538, -0.6118161678314209, -0.1907351166009903, -0.08621764928102493, -0.5275602340698242, -0.1202625259757042, -0.6030711531639099, -0.39869844913482666, 0.7883259057998657, -0.10361495614051819, -0.01819072850048542, 0.06286988407373428, 0.14485374093055725, -0.209644615650177, 0.22092701494693756, 0.9955052137374878, -0.041167475283145905, -0.4699646830558777, 0.38391396403312683, -0.17918513715267181, 0.131124809384346, 0.08780553936958313, -0.09788008779287338, -0.6604525446891785, -0.18629692494869232, -0.04072345793247223, -0.3320177495479584, 0.6523617506027222, -0.12365888804197311, 0.6451932787895203, -0.5250093340873718, 0.06934533268213272, 0.6469290852546692, -1.1477608680725098, -0.14068913459777832, 0.1953219771385193, 0.2269403338432312, 0.18585145473480225, -0.25851160287857056, -0.32478487491607666, 0.40294089913368225, -0.34428220987319946, -0.2139921337366104, 0.14965656399726868, -0.19758160412311554, 0.15372930467128754, 0.04296911507844925, 1.3633418083190918, -0.16788582503795624, -0.5482383966445923, -0.6015313267707825, 0.4308779835700989, -0.32357504963874817, 0.4428035318851471, 0.06565254926681519, -0.4870064854621887, 0.2751576602458954, 0.10491523891687393, 0.7750453948974609, -0.16454333066940308, 0.027936585247516632, -0.6417739987373352, 0.42386770248413086, 0.08398564159870148, 0.31867715716362, -0.44097763299942017, 0.6059589982032776, 0.26132097840309143, -0.2033851444721222, 0.6292901635169983, -0.6648587584495544, -0.24969181418418884, 0.6268492341041565, 0.06598161906003952, -0.0032030493021011353, -0.47258836030960083, -0.3923267722129822, 0.11678260564804077, 0.5358361005783081, 0.04159955680370331, -0.2874380350112915, 0.23096296191215515, -1.034318208694458, -0.05520806089043617, -0.2244991660118103, 0.7145437598228455, -0.1585237979888916, 0.043205779045820236, 0.06785227358341217, -0.21024563908576965, -0.4719931483268738, 0.9126363396644592, -0.2953393757343292, 0.21034204959869385, -0.7292114496231079, 0.06409988552331924, 0.014074550941586494, 0.13510560989379883, 0.22942718863487244, 0.6179203391075134, -0.8699978590011597, -0.1375228315591812, -0.38259926438331604, -0.17439067363739014, -0.22544367611408234, -0.2167581170797348, -0.2299177497625351, -0.33808794617652893, 0.17567044496536255, 0.46310967206954956, -0.08529720455408096, 0.24018016457557678, -0.46552762389183044, 0.18603332340717316, -0.7467636466026306, -0.4862874150276184, 0.11106789112091064, 0.0036770699080079794, -0.4478793442249298, 0.08583424985408783, 0.2119353711605072, 0.453082799911499, 0.4576132893562317, -0.807788074016571, 0.46840566396713257, -0.011761114932596684, 0.466298371553421, 0.024427758529782295, 0.1513524204492569, -0.08525621145963669, -0.3821672797203064, 0.16729648411273956, 0.4567703902721405, 0.02568058855831623, -0.3075454533100128, 0.34997421503067017, -0.26532331109046936, 0.07150602340698242, 0.25269681215286255, -0.4698733687400818, -0.4627872109413147, 0.301433265209198, -0.012277726083993912, -0.07120712846517563, -0.4089440703392029, 0.4812552034854889, -0.4738638997077942, 0.3030910789966583, 0.631611704826355, -0.4303865134716034, -0.7108235955238342, 1.1052607297897339, 0.48101723194122314, -0.055352915078401566, 1.1291577816009521, 0.12858282029628754, -0.5104659795761108, -0.3609200119972229, -0.06744437664747238, -0.23027215898036957, -0.24788445234298706, 0.2594550848007202, 0.5851308107376099, -0.19558535516262054, 0.6365450024604797, 0.35077086091041565, 0.38759350776672363, 0.5902606248855591, 0.217998668551445, -0.35105085372924805, -0.6645863652229309, 0.15351878106594086, 0.17773820459842682, -0.4221397042274475, 0.30928540229797363, 0.36965715885162354, -0.19973260164260864, -0.062253374606370926, -0.9909837245941162, 0.2391156554222107, -0.027394067496061325, 0.10764425247907639, -0.2486007809638977, 0.21948009729385376, 0.35487228631973267, 0.7491284012794495, -0.17558787763118744, 0.6056225299835205, -0.33341124653816223, 0.346799373626709, -0.31402480602264404, -0.18775607645511627, 0.048875972628593445, 0.6737247705459595, -0.0013182561378926039, -0.02544744499027729, 0.09064500778913498, 0.4753640592098236, -0.24268341064453125, -0.5906276702880859, -0.8648325800895691, 0.6599270105361938, -0.06960632652044296, -0.36555930972099304, 0.18064329028129578, -0.20762872695922852, -0.13517582416534424, 0.26985716819763184, 0.3237798810005188, -0.3171025514602661, 0.42051127552986145, -0.32403090596199036, 0.587704062461853, -0.5033622980117798, -0.25534069538116455, -0.43001994490623474, 0.31738120317459106, -0.30726560950279236, -0.266971617937088, 0.04409076273441315, 0.25800034403800964, 0.3713487386703491, -0.0078077963553369045, -0.06561978161334991, -0.48112034797668457, 0.8267979025840759, -0.981671929359436, 0.8302231431007385, 0.31139859557151794, -0.18877141177654266, -0.19082370400428772, 0.8437623977661133, -0.13080695271492004, -0.22951357066631317, -0.26936450600624084, 0.042622145265340805, -0.3059433698654175, -0.12672652304172516, 0.21694506704807281, -0.19225087761878967, 0.202728271484375, -0.1374366581439972, 0.2908931076526642, 0.433982253074646, -0.3125026822090149, 0.23193934559822083, -0.5946955680847168, 0.07131767272949219, -0.05660345405340195, -0.009134641848504543, -0.16374903917312622, 0.23857998847961426, 0.0892132818698883, -0.1417529433965683, -0.42052462697029114, -0.6556075215339661, -0.34147560596466064, 0.9251529574394226, 0.39529693126678467, -0.0028442831244319677, 0.49064508080482483, 0.37923678755760193, 0.6701545715332031, -0.21475031971931458, 0.16130362451076508, 0.18188437819480896, -0.3148772418498993, -0.0368584506213665, -0.6726038455963135, -0.01801762357354164, -0.12684403359889984, -0.5314012169837952, -0.04583024978637695, 0.395176500082016, 0.18109452724456787, 0.5002402067184448, -0.1918187141418457, 0.13485687971115112, -0.5023834109306335, -0.015259097330272198, 0.8327109217643738, -0.10065657645463943, -0.3860633671283722, 0.7828928232192993, 0.48610085248947144, 0.3159027695655823, 0.6296001672744751, 0.03887579217553139, 0.2390735149383545, -0.17268291115760803, -0.5083317160606384, 0.19208650290966034, -0.11211933195590973, 0.2214498370885849, -0.4835129678249359, 0.16714634001255035, 0.04286103695631027, 0.2987450361251831, 0.19762326776981354, -0.18392314016819, -0.07303624600172043, 0.021237365901470184, -0.36508938670158386, 0.46041709184646606, -0.09323012083768845, 0.24461615085601807, 0.03730161488056183, -0.17634083330631256, 0.22261099517345428, -0.02475920133292675, 0.3401254713535309, 0.14596304297447205, 0.3569481074810028, -0.09646844863891602, 0.44779419898986816, -0.07604115456342697, -0.0057330443523824215, -0.3256457448005676, 0.10156837105751038, 0.5047632455825806, -0.278146892786026, -0.41846010088920593, -0.12421651184558868, -0.1229020431637764, -0.977672815322876, 0.6387638449668884, -0.07377439737319946, -0.027352476492524147, -0.8596593141555786, -0.14372111856937408, 0.3679355978965759, 0.2727506458759308, 0.9908123016357422, 0.7163767218589783, -0.20433470606803894, -0.11532867699861526, 0.43886104226112366, -0.21620827913284302, -0.14458951354026794, 0.00026614588568918407, 0.7811717987060547, -0.42189568281173706, -0.6073082089424133, -0.4939330816268921, -0.4122396409511566, -0.19699203968048096, 0.7521572113037109, -0.03194843605160713, -0.16196301579475403, 0.46314430236816406, -0.09527216106653214, -0.08142736554145813, -0.31947076320648193, -0.11181259155273438, 0.013368472456932068, 0.01576843298971653, -0.023857437074184418, 0.067739337682724, 0.4029025733470917, -0.37417587637901306, -0.2787421941757202, -0.5707777142524719, 0.6266753673553467, 0.7290340662002563, -0.28076088428497314, -0.2111276388168335, 0.4457639455795288, 0.2697186768054962, 0.5340893268585205, -0.5917829275131226, 0.10251446813344955, 0.0019133182941004634, -0.5097352266311646, -0.050407350063323975, -0.612693727016449, -0.21940556168556213, -0.5031700730323792, 0.22155116498470306, 0.34172767400741577, 0.3834333121776581, -0.054521553218364716, 0.16101300716400146, -0.29094645380973816, -0.39371320605278015, 0.13098007440567017, -0.09602367132902145, -0.2707514464855194, -0.379984974861145, 0.5178824663162231, -0.2587968111038208, 0.9022095203399658, -0.10768559575080872, -0.6791508793830872, 0.8398559093475342, 0.5049396753311157, -0.09260107576847076, 0.96518874168396, -0.21429531276226044, -0.24074013531208038, -0.14683692157268524, 0.9502947926521301, -0.33372846245765686, -0.78703773021698, 0.048384517431259155, 0.2342127412557602, 0.16748502850532532, -0.4379711151123047, 0.5293581485748291, -0.5840602517127991, -0.22530198097229004, 0.2805386781692505, 0.03062998317182064, -0.3359070420265198, 0.5566035509109497, 1.2695770263671875, -0.5649901628494263, 0.24334990978240967, 0.9239763021469116, 0.42491021752357483, 0.061307117342948914, 0.06313233077526093, 0.5362051725387573, 0.43887412548065186, 0.08431632816791534, 0.10513886064291, -0.28504374623298645, -0.33624494075775146, -0.4584611654281616, 0.8743813633918762, -0.2288215607404709, -0.038902927190065384, -0.1298399269580841, -0.3240746855735779, 0.6726818084716797, 0.24430111050605774, 0.010692051611840725, -0.20868705213069916, 0.054288946092128754, -0.14788936078548431, -0.9178450107574463, -0.28248825669288635, -0.30555444955825806, -0.20006491243839264, 0.4225732386112213, 0.4280509650707245, 0.5586514472961426, -0.11251647770404816, 0.4606299102306366, 0.29826533794403076, 0.10664992779493332, 0.3306543231010437, -0.12656354904174805, -0.18999652564525604, 0.2370646744966507, -0.22072374820709229, -0.27777600288391113, 1.1649292707443237, 0.7796338200569153, -0.4024706780910492, 0.3618462085723877, -0.13719682395458221, 0.5716619491577148, 0.6837007403373718, -0.24591749906539917, -0.30223891139030457, 0.14423184096813202, -0.251425564289093, 0.8627452850341797, -0.36704200506210327, 0.5469743609428406, -0.3241480886936188, -0.0007766589988023043, -0.3246399462223053, 0.08474991470575333, -0.06207291781902313, 0.3502254784107208, 0.37671491503715515, -0.327459454536438, -0.12603870034217834, 0.7465444207191467, -0.8896822333335876, 0.5841296315193176, -0.18581560254096985, -0.25136423110961914, 0.3417990207672119, -0.10481050610542297, -0.11854024231433868, -0.57133549451828, -0.3016273081302643, -0.2463580071926117, 0.2372434139251709, 0.8411663770675659, 0.13778644800186157, -0.5617761611938477, 0.09479284286499023, 1.0760526657104492, -0.11822061240673065, 0.07481929659843445, 0.2890634536743164, -0.12415137141942978, 0.508056104183197, 0.05392982438206673, 0.5910760760307312, -0.00755563797429204, -0.22874461114406586, -0.1880076825618744, -0.016835644841194153, -0.42146939039230347, 0.24481423199176788, 0.6950743794441223, 0.5541421175003052, -0.020112419500947, -0.08076322078704834], "query": "class GrampsObjectsResource(GrampsObjectResourceHelper, Resource):\n\n    \"\"\"Resource for multiple objects.\"\"\"\n\n    @use_args(\n        {\n            \"backlinks\": fields.Boolean(load_default=False),\n            \"dates\": fields.Str(\n                load_default=None,\n                validate=validate.Regexp(\n                    r\"^([0-9]+|\\*)/([1-9]|1[0-2]|\\*)/([1-9]|1[0-9]|2[0-9]|3[0-1]|\\*)$|\"\n                    r\"^-[0-9]+/([1-9]|1[0-2])/([1-9]|1[0-9]|2[0-9]|3[0-1])$|\"\n                    r\"^[0-9]+/([1-9]|1[0-2])/([1-9]|1[0-9]|2[0-9]|3[0-1])-$|\"\n                    r\"^[0-9]+/([1-9]|1[0-2])/([1-9]|1[0-9]|2[0-9]|3[0-1])-\"\n                    r\"[0-9]+/([1-9]|1[0-2])/([1-9]|1[0-9]|2[0-9]|3[0-1])$\"\n                ),\n            ),\n            \"extend\": fields.DelimitedList(\n                fields.Str(validate=validate.Length(min=1)),\n                validate=validate.ContainsOnly(\n                    choices=[\n                        \"all\",\n                        \"citation_list\",\n                        \"event_ref_list\",\n                        \"family_list\",\n                        \"note_list\",\n                        \"parent_family_list\",\n                        \"person_ref_list\",\n                        \"primary_parent_family\",\n                        \"place\",\n                        \"source_handle\",\n                        \"father_handle\",\n                        \"mother_handle\",\n                        \"media_list\",\n                        \"reporef_list\",\n                        \"tag_list\",\n                        \"backlinks\",\n                        \"child_ref_list\",\n                    ]\n                ),\n            ),\n            \"filter\": fields.Str(validate=validate.Length(min=1)),\n            \"formats\": fields.DelimitedList(\n                fields.Str(validate=validate.Length(min=1))\n            ),\n            \"format_options\": fields.Str(validate=validate.Length(min=1)),\n            \"gql\": fields.Str(validate=validate.Length(min=1)),\n            \"oql\": fields.Str(validate=validate.Length(min=1)),\n            \"gramps_id\": fields.Str(validate=validate.Length(min=1)),\n            \"keys\": fields.DelimitedList(fields.Str(validate=validate.Length(min=1))),\n            \"locale\": fields.Str(\n                load_default=None, validate=validate.Length(min=1, max=5)\n            ),\n            \"page\": fields.Integer(load_default=0, validate=validate.Range(min=1)),\n            \"pagesize\": fields.Integer(load_default=20, validate=validate.Range(min=1)),\n            \"profile\": fields.DelimitedList(\n                fields.Str(validate=validate.Length(min=1)),\n                validate=validate.ContainsOnly(\n                    choices=[\n                        \"all\",\n                        \"self\",\n                        \"families\",\n                        \"events\",\n                        \"age\",\n                        \"span\",\n                        \"ratings\",\n                        \"references\",\n                    ]\n                ),\n            ),\n            \"rules\": fields.Str(validate=validate.Length(min=1)),\n            \"skipkeys\": fields.DelimitedList(\n                fields.Str(validate=validate.Length(min=1))\n            ),\n            \"sort\": fields.DelimitedList(fields.Str(validate=validate.Length(min=1))),\n            \"soundex\": fields.Boolean(load_default=False),\n            \"strip\": fields.Boolean(load_default=False),\n            \"filemissing\": fields.Boolean(load_default=False),\n        },\n        location=\"query\",\n    )\n    def get(self, args: Dict) -> Response:\n        \"\"\"Get all objects.\"\"\"\n        locale = get_locale_for_language(args[\"locale\"], default=True)\n        if \"gramps_id\" in args:\n            obj = self.get_object_from_gramps_id(args[\"gramps_id\"])\n            if obj is None:\n                abort(404)\n            return self.response(\n                200, [self.full_object(obj, args, locale=locale)], args, total_items=1\n            )\n\n        # load all objects to memory\n        objects_name = GRAMPS_OBJECT_PLURAL[self.gramps_class_name]\n        iter_objects_method = self.db_handle.method(\"iter_%s\", objects_name)\n        objects = list(iter_objects_method())\n\n        # for all objects except events, repos, and notes, Gramps supports\n        # a database-backed default sort order. Use that if no sort order\n        # requested.\n        query_method = self.db_handle.method(\"get_%s_handles\", self.gramps_class_name)\n        if self.gramps_class_name in [\"Event\", \"Repository\", \"Note\"]:\n            handles = query_method()\n        else:\n            handles = query_method(sort_handles=True, locale=locale)\n        handle_index = {handle: index for index, handle in enumerate(handles)}\n        # sort objects by the sorted handle order\n        objects = sorted(\n            objects, key=lambda obj: handle_index.get(obj.handle, len(handles) + 1)\n        )\n\n        if \"filter\" in args or \"rules\" in args:\n            handles = [obj.handle for obj in objects]\n            handles = apply_filter(\n                self.db_handle, args, self.gramps_class_name, handles\n            )\n            objects = [obj for obj in objects if obj.handle in set(handles)]\n\n        if \"gql\" in args:\n            try:\n                objects = [\n                    obj\n                    for obj in objects\n                    if gql.match(query=args[\"gql\"], obj=obj, db=self.db_handle)\n                ]\n            except (ParseBaseException, ValueError, TypeError) as e:\n                abort_with_message(422, str(e))\n\n        if \"oql\" in args:\n            try:\n                objects = [\n                    obj\n                    for obj in objects\n                    if oql.match(query=args[\"oql\"], obj=obj, db=self.db_handle)\n                ]\n            except (ParseBaseException, ValueError, TypeError) as e:\n                abort_with_message(422, str(e))\n\n        if self.gramps_class_name == \"Media\" and args.get(\"filemissing\"):\n            objects = filter_missing_files(objects)\n\n        if args[\"dates\"]:\n            objects = self.match_dates(objects, args[\"dates\"])\n\n        if \"sort\" in args:\n            objects = self.sort_objects(objects, args[\"sort\"], locale=locale)\n\n        total_items = len(objects)\n\n        if args[\"page\"] > 0:\n            offset = (args[\"page\"] - 1) * args[\"pagesize\"]\n            objects = objects[offset : offset + args[\"pagesize\"]]\n\n        return self.response(\n            200,\n            [self.full_object(obj, args, locale=locale) for obj in objects],\n            args,\n            total_items=total_items,\n        )\n\n    def post(self) -> Response:\n        \"\"\"Post a new object.\"\"\"\n        require_permissions([PERM_ADD_OBJ])\n        # check quota\n        if self.gramps_class_name == \"Person\":\n            check_quota_people(to_add=1)\n        obj = self._parse_object()\n        if not obj:\n            abort_with_message(400, \"Empty object\")\n        db_handle = self.db_handle_writable\n        with DbTxn(f\"New {self.gramps_class_name}\", db_handle) as trans:\n            try:\n                add_object(db_handle, obj, trans, fail_if_exists=True)\n            except ValueError:\n                abort_with_message(400, \"Error while adding object\")\n            trans_dict = transaction_to_json(trans)\n        # update usage\n        if self.gramps_class_name == \"Person\":\n            update_usage_people()\n        # update search index\n        tree = get_tree_from_jwt()\n        indexer: SearchIndexer = get_search_indexer(tree)\n        for _trans_dict in trans_dict:\n            handle = _trans_dict[\"handle\"]\n            class_name = _trans_dict[\"_class\"]\n            indexer.add_or_update_object(handle, db_handle, class_name)\n        if app_has_semantic_search():\n            indexer: SearchIndexer = get_search_indexer(tree, semantic=True)\n            for _trans_dict in trans_dict:\n                handle = _trans_dict[\"handle\"]\n                class_name = _trans_dict[\"_class\"]\n                indexer.add_or_update_object(handle, db_handle, class_name)\n        return self.response(201, trans_dict, total_items=len(trans_dict))", "answer": "{}"}
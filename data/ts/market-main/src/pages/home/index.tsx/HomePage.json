{"start_line": 20, "code": "HomePage = (): JSX.Element => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const { theme } = useContext(ThemeContext);\n  const products = useStore($products);\n  const filters = useStore($filters);\n  const { query, category, limit } = filters;\n  const [activeProduct, setActiveProduct] = useState<null | Product>(null);\n\n  const includes = (value: string): boolean =>\n    value.toLowerCase().includes(query.toLowerCase());\n\n  const filteredProducts = products\n    .filter(\n      (item) =>\n        query.trim().length === 0 ||\n        includes(item.brand) ||\n        includes(item.description) ||\n        includes(item.title)\n    )\n    .filter((item) => category === \"all\" || item.category === category)\n    .filter((_, index: number) => index < limit);\n\n  useEffect(() => {\n    if (products.length === 0) fetchProducts({ setLoading, filters });\n  }, [filters, products]);\n\n  return (\n    <main className={styles.homePage}>\n      <div className={styles.Container}>\n        <div className={styles.controllPanel}>\n          <SearchInput\n            {...{\n              query,\n              setQuery: (query: string) => setFilters({ ...filters, query }),\n            }}\n          />\n          <Categories\n            {...{\n              category,\n              setCategory: (category: Category) =>\n                setFilters({ ...filters, category }),\n            }}\n          />\n          <LimitSelector\n            {...{\n              limit,\n              setLimit: (limit: number) => setFilters({ ...filters, limit }),\n            }}\n          />\n        </div>\n        <div className={styles.ProductsList}>\n          {loading ? (\n            <Loader productsNumber={filters.limit} />\n          ) : (\n            filteredProducts.map((item) => {\n              return (\n                <ProductItem\n                  theme={theme}\n                  product={item}\n                  setProduct={setActiveProduct}\n                  key={item.id}\n                />\n              );\n            })\n          )}\n        </div>\n      </div>\n      <Modal\n        {...{\n          isVisible: activeProduct !== null,\n          hideModal: () => setActiveProduct(null),\n          product: activeProduct,\n          setActiveProduct,\n          products,\n        }}\n      />\n    </main>\n  );\n}"}
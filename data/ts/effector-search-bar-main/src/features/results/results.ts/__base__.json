{"start_line": 0, "code": "import { addHours } from \"date-fns\";\n\nimport { combine, createEvent, createStore } from \"effector\";\n\nimport { Result } from \".\";\n\nimport { noOvernightFlightsFilter, onlyConvenientFlightsFilter, onlyFastFlightsFilter } from \"../filters\";\n\nimport { flow } from \"lodash\";\n\n\nexport const writeToResults = createEvent();\n\n\nconst now = new Date();\n\n\n// <REVIEW>\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0434\u043e\u043b\u0436\u043d\u043e \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442\u044c \u0432 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u043f\u043e \u043f\u0443\u0442\u0438 /src/Model/{\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435}/state.ts</REVIEW> \nexport const $results = createStore<Result[]>([]).on(writeToResults, () => [\n\n// <REVIEW>\u0414\u0430\u043d\u043d\u0430\u044b \u043c\u0430\u0441\u0441\u0438\u0432 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u043e\u0439 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0432 \u0432\u0435\u0440\u0445\u043d\u0435\u043c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0435 \u0438 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u043f\u043e \u043f\u0443\u0442\u0438 \u043f\u043e \u043f\u0443\u0442\u0438 /src/Model/{\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435}/constants.ts</REVIEW> \n  {\n\n    origin: \"HKT\",\n\n    destination: \"JFK\",\n\n    departure: addHours(now, 1),\n\n    arrival: addHours(now, 17),\n\n  },\n\n  {\n\n    origin: \"HKT\",\n\n    destination: \"LED\",\n\n    departure: addHours(now, 1),\n\n    arrival: addHours(now, 10),\n\n  },\n\n  {\n\n    origin: \"MOW\",\n\n    destination: \"LED\",\n\n    departure: addHours(now, 4),\n\n    arrival: addHours(now, 6),\n\n  },\n\n  {\n\n    origin: \"MOW\",\n\n    destination: \"ABA\",\n\n    departure: addHours(now, 6),\n\n    arrival: addHours(now, 11),\n\n  },\n\n  {\n\n    origin: \"IKT\",\n\n    destination: \"BKK\",\n\n    departure: addHours(now, 4),\n\n    arrival: addHours(now, 10),\n\n  },\n\n  {\n\n    origin: \"HKT\",\n\n    destination: \"BKK\",\n\n    departure: addHours(now, 3),\n\n    arrival: addHours(now, 4),\n\n  },\n\n  {\n\n    origin: \"MOW\",\n\n    destination: \"BKK\",\n\n    departure: addHours(now, 5),\n\n    arrival: addHours(now, 12),\n\n  },\n\n  {\n\n    origin: \"LED\",\n\n    destination: \"JFK\",\n\n    departure: addHours(now, 3),\n\n    arrival: addHours(now, 16),\n\n  },\n\n  {\n\n    origin: \"JKF\",\n\n    destination: \"ABA\",\n\n    departure: addHours(now, 5),\n\n    arrival: addHours(now, 20),\n\n  },\n\n  {\n\n    origin: \"LED\",\n\n    destination: \"JFK\",\n\n    departure: addHours(now, 3),\n\n    arrival: addHours(now, 16),\n\n  },\n\n  {\n\n    origin: \"LED\",\n\n    destination: \"IKT\",\n\n    departure: addHours(now, 3),\n\n    arrival: addHours(now, 8),\n\n  },\n\n  {\n\n    origin: \"LED\",\n\n    destination: \"MOW\",\n\n    departure: addHours(now, 1),\n\n    arrival: addHours(now, 2),\n\n  },\n\n  {\n\n    origin: \"LED\",\n\n    destination: \"HKT\",\n\n    departure: addHours(now, 5),\n\n    arrival: addHours(now, 11),\n\n  },\n\n]);\n\n\nexport const $filteredFlights = combine(\n\n  {\n\n    results: $results,\n\n    noOvernightFlightsActive: noOvernightFlightsFilter.$active,\n\n    onlyConvenientFlightsActive: onlyConvenientFlightsFilter.$active,\n\n    onlyFastFlightsActive: onlyFastFlightsFilter.$active,\n\n  },\n\n  ({\n\n     results,\n\n     noOvernightFlightsActive,\n\n     onlyConvenientFlightsActive,\n\n     onlyFastFlightsActive,\n\n   }): Result[] =>\n\n    flow([\n\n      (results) =>\n\n        noOvernightFlightsFilter.applyFilter(noOvernightFlightsActive, results),\n\n      (results) =>\n\n        onlyConvenientFlightsFilter.applyFilter(\n\n          onlyConvenientFlightsActive,\n\n          results\n\n        ),\n\n      (results) =>\n\n        onlyFastFlightsFilter.applyFilter(onlyFastFlightsActive, results),\n\n    ])(results)\n\n);\n"}
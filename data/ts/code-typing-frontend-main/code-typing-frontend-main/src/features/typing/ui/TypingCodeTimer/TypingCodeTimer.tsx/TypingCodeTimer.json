{"start_line": 5, "code": "TypingCodeTimer = () => {\n    const {\n        timer: { timerStatus, timerSettings }\n    } = useTypingCodeTimer()\n    const { endTyping, resetTyping } = useTypingCodeHandlers()\n\n    const { start, time, reset } = useTimer({\n        onEnd: () => endTyping(),\n        startSeconds: timerSettings.direction === \"down\" ? timerSettings.startSeconds : 0,\n        direction: timerSettings.direction\n    })\n\n    useEffect(() => {\n        resetTyping()\n        reset()\n    }, [timerSettings.startSeconds])\n\n    useEffect(() => {\n        const handlerByTimerStatus: Record<TimerStatus, () => void> = {\n            started: () => start(),\n            stopped: () => reset()\n        }\n        handlerByTimerStatus[timerStatus]()\n    }, [timerStatus])\n\n    return <Timer time={time} />\n}"}
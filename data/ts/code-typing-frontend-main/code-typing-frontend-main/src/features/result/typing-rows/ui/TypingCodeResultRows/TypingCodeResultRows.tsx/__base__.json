{"start_line": 0, "code": "import { forwardRef } from \"react\"\n\n\nimport { Flex, Text, Tooltip } from \"@chakra-ui/react\"\n\n\nimport { useSaveResultOnEnd } from \"./TypingCodeResultRows.hooks.ts\"\n\nimport { CodeContainer, CodeIndexesRange, CodeRow, CodeRows, useCodeErrors } from \"@entities/code\"\n\nimport { SymbolsPerSecondChart, symbolsPerSecondToChart, useResult } from \"@entities/results\"\n\nimport { TypingCodeResultRowsProps } from \"@features/result\"\n\nimport { convertMillisecondsAndDateToTime } from \"@shared/libs\"\n\n\nexport const TypingCodeResultRows = forwardRef<HTMLDivElement, TypingCodeResultRowsProps>(\n\n    (props, scrollRef) => {\n\n        const { startIndex } = props\n\n\n        const { result } = useResult()\n\n        const { resultTime, symbolsPerMinute, symbolsPerSecond } = result\n\n\n        useSaveResultOnEnd()\n\n\n        const chartData = symbolsPerSecondToChart(symbolsPerSecond)\n\n        const { errorsCount } = useCodeErrors()\n\n\n        const startRows = 10\n\n\n        return (\n\n            <>\n\n                <CodeContainer>\n\n                    <CodeIndexesRange startIndex={startIndex} length={10} />\n\n\n                    <CodeRows>\n\n                        {Array.from({ length: startRows }).map((_, index) => (\n\n                            <CodeRow key={index} />\n\n                        ))}\n\n                    </CodeRows>\n\n                </CodeContainer>\n\n\n                <div ref={scrollRef} />\n\n\n                <CodeContainer>\n\n                    <CodeIndexesRange startIndex={startIndex + 10} length={20} />\n\n\n                    <CodeRows>\n\n                        <CodeRow>\n\n                            <Tooltip label=\"symbols per minute\">\n\n                                <Flex mr=\"100px\" gap=\"10px\">\n\n                                    <Text as=\"span\" fontSize=\"25px\" color=\"main.900\">\n\n\n                                        spm:\n                                    </Text>\n\n\n                                    <Text as=\"span\" fontSize=\"25px\">\n\n                                        {symbolsPerMinute?.toFixed(3)}\n\n                                    </Text>\n\n                                </Flex>\n\n                            </Tooltip>\n\n                        </CodeRow>\n\n\n                        <CodeRow>\n\n                            <Text fontSize=\"25px\" color=\"main.500\">\n\n\n                                time: {convertMillisecondsAndDateToTime(resultTime ?? 0)}\n\n                            </Text>\n\n                        </CodeRow>\n\n\n                        <CodeRow>\n\n                            <Text fontSize=\"25px\" color=\"red.200\">\n\n\n                                errors: {errorsCount}\n\n                            </Text>\n\n                        </CodeRow>\n\n\n                        <CodeRow>\n\n                            <Flex direction=\"column\" pos=\"relative\" w=\"100%\">\n\n                                <Flex pos=\"absolute\" top=\"0\" left=\"0\" h=\"300px\" width=\"97%\">\n\n                                    <SymbolsPerSecondChart data={chartData} />\n\n                                </Flex>\n\n                            </Flex>\n\n                        </CodeRow>\n\n                    </CodeRows>\n\n                </CodeContainer>\n\n            </>\n\n        )\n\n    }\n\n)\n"}
{"start_line": 0, "code": "import { createEvent, createStore } from \"effector\"\n\n\nimport { IResultCode } from \"@entities/results\"\n\n\nexport const eventEndResult = createEvent<{\n\n    textSymbolCount: number\n\n    endTime: Date\n\n    errorsCount: number\n\n}>()\n\nexport const eventStartResult = createEvent<{ text: string; startTime: Date }>()\n\nexport const eventTick = createEvent<{ symbols: number; date: Date }>()\n\n\nexport const eventClearResult = createEvent()\n\n\nexport const $resultStore = createStore<IResultCode>({\n\n    text: null,\n\n    symbolsPerMinute: null,\n\n    startTime: null,\n\n    endTime: null,\n\n    resultTime: null,\n\n    symbolsPerSecond: [],\n\n    accuracy: null,\n\n    errorsCount: null\n\n})\n\n\n$resultStore\n\n    .on(eventTick, (state, { symbols, date }) => {\n\n        if (!state.startTime) return\n\n\n        const tick = symbols / ((date.valueOf() - state.startTime.valueOf()) / 1000 / 60)\n\n\n        return { ...state, symbolsPerSecond: [...state.symbolsPerSecond, tick] }\n\n    })\n\n    .on(eventStartResult, (state, { startTime, text }) => ({\n\n        ...state,\n\n        startTime: startTime,\n\n        text\n\n    }))\n\n    .on(eventEndResult, (state, { endTime, textSymbolCount, errorsCount }) => {\n\n        const countSymbols = textSymbolCount\n\n        const resultTimeMs = Math.abs(endTime.valueOf() - (state.startTime?.valueOf() ?? 0))\n\n\n        const resultTime = new Date(resultTimeMs)\n\n        const resultMinutes = resultTimeMs / 1000 / 60\n\n        const symbolPerMinute = countSymbols / resultMinutes\n\n        // const symbolsTick = [...state.symbolsTick, countSymbols]\n\n\n        return { ...state, endTime, resultTime, symbolsPerMinute: symbolPerMinute, errorsCount }\n\n    })\n\n    .on(eventClearResult, () => ({\n\n        text: null,\n\n        symbolsPerMinute: null,\n\n        startTime: null,\n\n        endTime: null,\n\n        resultTime: null,\n\n        symbolsPerSecond: [],\n\n        errorsCount: null,\n\n        accuracy: null\n\n    }))\n\n\n// $resultStore.watch((state) => {\n\n//     console.log(state)\n\n// })\n"}
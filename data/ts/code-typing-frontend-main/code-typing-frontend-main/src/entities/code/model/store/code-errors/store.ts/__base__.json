{"start_line": 0, "code": "import { createEvent, createStore } from \"effector\"\n\nimport { useUnit } from \"effector-react/compat\"\n\n\nimport { CodeErrorsContextState } from \"@entities/code\"\n\n\nconst eventIncrementErrors = createEvent()\n\nconst eventSetErrorsCount = createEvent<number>()\n\nconst eventSetIsError = createEvent<boolean>()\n\n\nconst $codeErrorsStore = createStore<CodeErrorsContextState>({\n\n    isError: false,\n\n    errorsCount: 0\n\n})\n\n    .on(eventIncrementErrors, state => ({\n\n        ...state,\n\n        errorsCount: state.errorsCount + 1\n\n    }))\n\n    .on(eventSetErrorsCount, (state, errors) => ({\n\n        ...state,\n\n        errorsCount: errors\n\n    }))\n\n    .on(eventSetIsError, (state, isError) => ({\n\n        ...state,\n\n        isError: isError\n\n    }))\n\n\nexport const useCodeErrors = () => useUnit($codeErrorsStore)\n\nexport const useCodeErrorsHandlers = () =>\n\n    useUnit({\n\n        incrementErrors: eventIncrementErrors,\n\n        setErrorsCount: eventSetErrorsCount,\n\n        setIsError: eventSetIsError\n\n    })\n"}
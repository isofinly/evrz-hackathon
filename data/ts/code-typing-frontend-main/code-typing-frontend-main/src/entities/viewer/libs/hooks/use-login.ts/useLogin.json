{"start_line": 13, "code": "useLogin = () => {\n    const { loginViewer } = useViewer()\n    const toast = useToast()\n    const navigate = useNavigate()\n    const errorHandler = useAxiosErrorToast()\n    const queryClient = useQueryClient()\n\n    return useMutation({\n        mutationFn: (credentials: LoginCredentials) => ViewerService.login(credentials),\n        onSuccess: async access => {\n            loginViewer(access)\n            toast({\n                title: \"Login successful\",\n                status: \"success\"\n            })\n\n            await queryClient.invalidateQueries({\n                queryKey: [queryKeysEnum.savedResults]\n            })\n\n            navigate(paths.typingCodePage, { replace: true })\n        },\n        onError: errorHandler\n    })\n}"}
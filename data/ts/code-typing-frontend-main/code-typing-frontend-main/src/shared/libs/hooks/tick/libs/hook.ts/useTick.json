{"start_line": 4, "code": "useTick = (callback: (tick: number) => void, intervalMs = 1000) => {\n    const [tick, setTick] = useState<number>(0)\n    const intervalRef = useRef<NodeJS.Timeout | null>(null)\n\n    const startTick = () => {\n        if (!intervalRef.current) {\n            intervalRef.current = setInterval(() => {\n                setTick(prevTick => prevTick + 1)\n            }, intervalMs)\n        }\n    }\n\n    const endTick = () => {\n        if (intervalRef.current) {\n            clearInterval(intervalRef.current)\n            intervalRef.current = null\n            setTick(0)\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            endTick()\n        }\n    }, [])\n\n    useEffect(() => {\n        if (tick === 0) return\n        callback(tick)\n    }, [tick])\n\n    return { startTick, endTick }\n}"}
{"start_line": 24, "code": "recursiveListSearchFunction = (\n\n    items: RecursiveListItemType[],\n\n    value: string,\n\n    parents: string[] = []\n\n): RecursiveListItemType[] => {\n    return items.flatMap(item => {\n        const isIncludes =\n            getIsIncludes(item.name, value) ||\n            parents?.some(parent => getIsIncludes(parent ?? \"\", value))\n        let childrenList = [] as RecursiveListItemType[]\n\n        if (item.children) {\n            childrenList = recursiveListSearchFunction(item.children, value, [\n                ...(parents ? parents : []),\n                item.name\n            ])\n        }\n\n        if (!isIncludes) {\n            return [...childrenList]\n        }\n\n        return [{ ...item, parents }, ...childrenList]\n    })\n}"}
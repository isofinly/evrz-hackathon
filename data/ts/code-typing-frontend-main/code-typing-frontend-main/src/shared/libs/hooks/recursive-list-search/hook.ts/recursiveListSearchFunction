recursiveListSearchFunction = (
    items: RecursiveListItemType[],
    value: string,
    parents: string[] = []
): RecursiveListItemType[] => {
    return items.flatMap(item => {
        const isIncludes =
            getIsIncludes(item.name, value) ||
            parents?.some(parent => getIsIncludes(parent ?? "", value))
        let childrenList = [] as RecursiveListItemType[]

        if (item.children) {
            childrenList = recursiveListSearchFunction(item.children, value, [
                ...(parents ? parents : []),
                item.name
            ])
        }

        if (!isIncludes) {
            return [...childrenList]
        }

        return [{ ...item, parents }, ...childrenList]
    })
}
{"query": "RecursiveList = (props: RecursiveListProps) => {\n    const {\n        openItems,\n        setOpenItemNames,\n        itemFocusedIndex,\n        itemFocusedRef,\n        containerRef,\n        onOpenNew,\n        searchValue\n    } = props\n\n    const handleOpenNew = (newOpen: RecursiveListItemType) => {\n        if (!newOpen.children) return\n        if (newOpen.parents) {\n            setOpenItemNames([...newOpen.parents, newOpen.name])\n        } else {\n            setOpenItemNames(prev => [...prev, newOpen.name])\n        }\n        onOpenNew && onOpenNew()\n    }\n\n    return (\n        <Box\n            display=\"flex\"\n            flexDir=\"column\"\n            gap=\"5px\"\n            ref={containerRef}\n            overflow=\"auto\"\n            pr={1}\n            mt={3}\n        >\n            {openItems && openItems.length ? (\n                openItems?.map((item, index) => (\n                    <Fragment key={item.name}>\n                        {item.renderItem ? (\n                            item.renderItem({\n                                onClick: () =>\n                                    item.action ? item.action : () => handleOpenNew(item),\n                                item: item,\n                                ref: index === itemFocusedIndex ? itemFocusedRef : undefined,\n                                isFocus: index === itemFocusedIndex\n                            })\n                        ) : (\n                            <TileItemHelplist\n                                as=\"button\"\n                                onClick={() => (item.action ? item.action() : handleOpenNew(item))}\n                                isFocus={index === itemFocusedIndex}\n                                ref={index === itemFocusedIndex ? itemFocusedRef : undefined}\n                            >\n                                <TileText>\n                                    {` ${item.name} ${item.parents?.length ? \"-\" : \"\"} `}\n                                    <em>{item.parents?.join(\" > \")}</em>\n                                </TileText>\n                            </TileItemHelplist>\n                        )}\n                    </Fragment>\n                ))\n            ) : searchValue === \":q\" ? (\n                <Text>Press enter to close</Text>\n            ) : (\n                <Text>Not found item</Text>\n            )}\n        </Box>\n    )\n}", "answer": "{\"1\": \"\u0441\u0442\u0438\u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b className \u0438\u043b\u0438 style\"}"}
{"start_line": 4, "code": "useTerminalHistory = (\n\n    terminalCommands: string[],\n\n    onChangeValue: Dispatch<SetStateAction<string>>\n\n) => {\n    const [terminalHistory, setTerminalHistory] = useState<string[]>([CommandsEnum.help])\n    const [historyIndex, setHistoryIndex] = useState<number>(terminalCommands.length)\n\n    const handleAddHistory = (value: string) => {\n        setTerminalHistory(prev => [...prev, value])\n    }\n\n    const handleHistoryUp = () => {\n        if (historyIndex <= 0) return\n\n        onChangeValue(terminalHistory[historyIndex - 1])\n        setHistoryIndex(prev => prev - 1)\n    }\n\n    const handleHistoryDown = () => {\n        if (historyIndex >= terminalHistory.length - 1) {\n            onChangeValue(\"\")\n            return setHistoryIndex(terminalHistory.length)\n        }\n\n        onChangeValue(terminalHistory[historyIndex + 1])\n        setHistoryIndex(prev => prev + 1)\n    }\n\n    useEffect(() => {\n        setHistoryIndex(terminalHistory.length)\n    }, [terminalHistory])\n\n    return {\n        handleAddHistory,\n        handleHistoryUp,\n        handleHistoryDown,\n        terminalHistory,\n        historyIndex,\n        setHistoryIndex\n    }\n}"}
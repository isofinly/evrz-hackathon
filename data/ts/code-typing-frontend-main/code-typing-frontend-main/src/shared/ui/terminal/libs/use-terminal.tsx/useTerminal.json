{"start_line": 19, "code": "useTerminal = (props: TerminalProps): UseTerminalReturn => {\n    const { onClose } = props\n\n    const [value, setValue] = useState(\"\")\n    const [terminalCommands, setTerminalCommands] = useState<string[]>([CommandsEnum.help])\n\n    const { handleAddHistory, handleHistoryDown, handleHistoryUp } = useTerminalHistory(\n        terminalCommands,\n        setValue\n    )\n\n    const containerRef = useRef<HTMLDivElement>(null)\n    const inputRef = useRef<HTMLInputElement>(null)\n\n    const handleScrollBottom = () => {\n        containerRef.current?.scroll({ top: containerRef.current?.scrollHeight })\n    }\n\n    const handleChange: ChangeEventHandler<HTMLInputElement> = e => {\n        setValue(e.target.value)\n    }\n\n    useEffect(() => {\n        handleScrollBottom()\n    }, [terminalCommands])\n\n    const answersWithFunction: AnswersWithFunction = {\n        clear: () => {\n            setTerminalCommands([])\n        },\n        exit: () => {\n            onClose()\n        }\n    }\n\n    const handleAddCommand = () => {\n        handleAddHistory(value)\n        setValue(\"\")\n\n        setTerminalCommands(prev => [...prev, value])\n\n        const answerFunction = answersWithFunction[value as AnswersKeys]\n        answerFunction && answerFunction()\n    }\n\n    const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n        keyboardShortcuts<KeyboardEvent>({\n            Enter: handleAddCommand,\n            ArrowUp: e => {\n                e.preventDefault()\n                handleHistoryUp()\n            },\n            ArrowDown: e => {\n                e.preventDefault()\n                handleHistoryDown()\n            }\n        })(e)\n    }\n\n    const handleInputFocus: MouseEventHandler<HTMLDivElement> = e => {\n        e.stopPropagation()\n        inputRef.current?.focus()\n    }\n\n    return {\n        terminalValue: value,\n        handleChange,\n        containerRef,\n        inputRef,\n        handleInputFocus,\n        handleKeyDown,\n        handleAddCommand,\n        terminalCommands,\n        setTerminalCommands\n    }\n}"}
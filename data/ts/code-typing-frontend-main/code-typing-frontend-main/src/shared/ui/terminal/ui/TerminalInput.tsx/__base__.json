{"start_line": 0, "code": "import {\n\n    ChangeEventHandler,\n\n    forwardRef,\n\n    KeyboardEventHandler,\n\n    useImperativeHandle,\n\n    useRef,\n\n    useState\n\n} from \"react\"\n\n\nimport { Box, Input, Text } from \"@chakra-ui/react\"\n\n\nimport { TerminalInputProps } from \"@shared/ui/terminal/types\"\n\n\nexport const TerminalInput = forwardRef<HTMLInputElement, TerminalInputProps>((props, ref) => {\n\n    const { onChange, onKeyDown, value, isError = false, isSuccess = false, ...restProps } = props\n\n\n    const [cursorPosition, setCursorPosition] = useState<number | null | undefined>(0)\n\n\n    const inputRef = useRef<HTMLInputElement>(null)\n\n\n    const handleInputChange: ChangeEventHandler<HTMLInputElement> = e => <BODY handleInputChange>\n\n    const handleKeyDown: KeyboardEventHandler<HTMLInputElement> = e => <BODY handleKeyDown>\n\n    useImperativeHandle(ref, () => inputRef.current!)\n\n\n    const valueBeforeCursor = cursorPosition ? value.slice(0, cursorPosition) : \"\"\n\n    const cursorValue =\n\n        cursorPosition !== null && cursorPosition !== undefined ? value[cursorPosition] : \"\"\n\n\n    const valueAfterCursor =\n\n        cursorPosition !== null && cursorPosition !== undefined\n\n            ? value.slice(cursorPosition + 1)\n\n            : value\n\n\n    const maxLength = 200\n\n\n    const color = isSuccess ? \"green.500\" : isError ? \"red.500\" : \"white\"\n\n\n    return (\n\n        <Box pos=\"relative\">\n\n            <Text whiteSpace=\"pre-wrap\" maxW={`${maxLength}ch`} color={color} wordBreak=\"break-all\">\n\n                {valueBeforeCursor}\n\n                <Text as=\"span\" background={color} color=\"black\">\n\n                    {cursorValue}\n\n                </Text>\n\n                {valueAfterCursor}\n\n                {cursorPosition === value.length && (\n\n                    <Text as=\"span\" background=\"whiteAlpha.600\" color=\"black\" whiteSpace=\"pre\">\n\n                        {` `}\n\n                    </Text>\n\n                )}\n\n            </Text>\n\n\n            <Input\n\n                autoFocus\n\n                pos=\"absolute\"\n\n                bottom={-2}\n\n                left={0}\n\n                w={0}\n\n                h={0}\n\n                maxLength={maxLength - 1}\n\n                type=\"text\"\n\n                opacity={0}\n\n                value={value}\n\n                variant=\"unstyled\"\n\n                onChange={handleInputChange}\n\n                onKeyDown={handleKeyDown}\n\n                ref={inputRef}\n\n                {...restProps}\n\n            />\n\n        </Box>\n\n    )\n\n})\n"}
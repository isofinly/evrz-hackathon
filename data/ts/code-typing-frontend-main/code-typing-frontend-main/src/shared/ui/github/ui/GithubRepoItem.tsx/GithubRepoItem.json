{"start_line": 8, "code": "GithubRepoItem = (props: GithubRepoItemProps) => {\n    const { owner, repo: repoName } = props\n    const [isHover, setIsHover] = useState(false)\n\n    const { data: repo, isLoading } = useGetGithubRepo(owner, repoName)\n\n    const handleHover = () => {\n        setIsHover(true)\n    }\n\n    const handleHoverOut = () => {\n        setIsHover(false)\n    }\n\n    if (isLoading) return <GithubRepoSkeleton />\n\n    const iconWidth = \"1.2em\"\n\n    return (\n        <Flex\n            display=\"inline-flex\"\n            alignItems=\"center\"\n            onMouseEnter={handleHover}\n            onMouseLeave={handleHoverOut}\n        >\n            <Image\n                p=\"1px\"\n                bg={\"white\"}\n                h={iconWidth}\n                borderRadius=\"50%\"\n                w={iconWidth}\n                src={githubIcon}\n                alt=\"github icon\"\n                opacity={isHover ? 1 : 0}\n                transition=\"all 200ms\"\n                ml={isHover ? \"5px\" : \"-\" + iconWidth}\n            />\n\n            <Link\n                as=\"a\"\n                color=\"primary.400\"\n                _hover={{}}\n                href={repo?.html_url}\n                target=\"_blank\"\n                px={2}\n                py={1}\n                fontWeight=\"bold\"\n                textAlign=\"center\"\n                transition=\"all 200ms\"\n            >\n                {repo?.name}\n            </Link>\n        </Flex>\n    )\n}"}
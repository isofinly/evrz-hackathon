{"start_line": 0, "code": "export interface DatabaseUser <BODY DatabaseUser>\n\nexport interface ParsedTelegramUser <BODY ParsedTelegramUser>\n\nexport type InitializedWebAppUser = Omit<ParsedTelegramUser, 'id'> & {\n\n  id: string\n\n  initialized: true\n\n  inDatabase: DatabaseUser\n\n}\n\n\nexport type UnknownWebAppUser = Omit<ParsedTelegramUser, 'id'> & {\n\n  id: string\n\n  initialized: false\n\n}\n\n\nexport type User = InitializedWebAppUser | UnknownWebAppUser\n\n\nexport interface Consulate <BODY Consulate>\n\ninterface AppointmentCommon <BODY AppointmentCommon>\n\ntype AppointmentByStatus =\n\n  | { status: AppointmentStatus.Done; date: string; doneAt: string }\n\n  | { status: AppointmentStatus.NotPayed }\n\n  | { status: AppointmentStatus.Refunded }\n\n  | {\n\n      status: AppointmentStatus.InQueue\n\n      queueNumber: number\n\n      daysRemaining: number\n\n    }\n\n\nexport type Appointment = AppointmentCommon & AppointmentByStatus\n\n\nexport interface Price <BODY Price>\n\nexport enum AppointmentStatus {\n\n  NotPayed = 'NotPayed',\n\n  InQueue = 'InQueue',\n\n  Done = 'Done',\n\n  Refunded = 'Refunded',\n\n}\n"}
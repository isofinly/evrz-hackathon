{

import { useBackAction, useBackRoute } from '@features/go-back'
import { routes } from '@routing/shared'
import { formatRUB } from '@shared/lib/format'
import { onEnter, useError, useFilled } from '@shared/lib/forms'
import {
  Button,
  ButtonLink,
  ButtonSkeleton,
  Container,
  Input,
  ResultCard,
  Skeleton,
  StickyActions,
  Typography,
} from '@shared/ui'
import { BaseTemplate } from '@templates/base'
import { Header } from '@widgets/header'
import { useUnit } from 'effector-react'
import { Fragment } from 'react'
import { useForm, UseFormReturn, useFormState } from 'react-hook-form'
import { ServiceNotWorkingPage } from '../shared'
import {
  $fromHome,
  $selectedConsulate,
  $selectedConsulateId,
  $view,
  appointmentCreateMutation,
  confirmed,
  consulateSelected,
  consulatesQuery,
  formSubmitted,
  goToConsulateStep,
  goToRequestInfoStep,
  priceQuery,
  View,
} from './model'
import styles from './styles.module.css'
import { FormValues } from './types'

export const AppointmentCreatePage = () => <BODY AppointmentCreatePage>

const ConsulateStep = () => <BODY ConsulateStep>

const RequestInfoStep = ({ form }: { form: UseFormReturn<FormValues> }) => <BODY RequestInfoStep>


const Confirmation = () => <BODY Confirmation>


const Done = () => <BODY Done>


interface PropsWithForm <BODY PropsWithForm>


export const RequestId = ({ form }: PropsWithForm) => <BODY RequestId>


export const RequestSecurityCode = ({ form }: PropsWithForm) => <BODY RequestSecurityCode>


const RequestInfoSubmitButton = ({ form }: PropsWithForm) => <BODY RequestInfoSubmitButton>
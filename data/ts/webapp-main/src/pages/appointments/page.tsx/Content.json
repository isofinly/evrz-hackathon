{"start_line": 43, "code": "Content = () => {\n  const appointments = useUnit($$appointments.query)\n\n  if (appointments.pending)\n    return (\n      <Container>\n        {/*<REVIEW>\u0421\u0442\u0438\u043b\u0438 className \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c\u043d\u044b\u043c\u0438</REVIEW>  */}\n        <h2 className=\"font-bold font-interface text-[20px] leading-none px-4 pt-2 mb-4\">\n          <Skeleton type=\"inline\" width={170} />\n        </h2>\n        {/*<REVIEW>\u0421\u0442\u0438\u043b\u0438 className \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c\u043d\u044b\u043c\u0438</REVIEW>  */}\n        <div className=\"flex flex-col gap-2\">\n          <AppointmentCardSkeleton />\n          <AppointmentCardSkeleton />\n        </div>\n      </Container>\n    )\n\n  if (appointments.data.length === 0)\n    return (\n      <ResultCard\n        title=\"\u0417\u0430\u043f\u0438\u0441\u0435\u0439 \u043d\u0435\u0442\"\n        description={[\n          <Fragment key={1}>\n            \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u043a\u0443\u043f\u043a\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u0437\u0434\u0435\u0441\u044c \u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u043c\u0435\u0441\u0442\u043e \u0432\n            \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0438 \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043d\u0435\u0439 \u0434\u043e \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043b\u043e\u0442\u0430\n          </Fragment>,\n        ]}\n        actions={\n          <ButtonLink to={routes.appointmentCreate} fluid={true}>\n            \u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u0432 \u043a\u043e\u043d\u0441\u0443\u043b\u044c\u0441\u0442\u0432\u043e\n          </ButtonLink>\n        }\n      />\n    )\n\n  const byLocation = appointments.data!.reduce<Record<string, Appointment[]>>(\n    (acc, appointment) => {\n      const { country, city } = appointment.consulate\n      const location = `${country}, ${city}`\n\n      {/*<REVIEW>\u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c</REVIEW>*/}\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      const current = acc[location] ?? []\n      acc[location] = current.concat(appointment)\n\n      return acc\n    },\n    {},\n  )\n\n  const appointmentsJsx = Object.entries(byLocation).map(\n    ([location, appointments]) => {\n      return (\n        <Container key={location}>\n          {/*<REVIEW>\u0421\u0442\u0438\u043b\u0438 className \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c\u043d\u044b\u043c\u0438</REVIEW>  */}\n          <h2 className=\"font-bold font-interface text-[20px] leading-none px-4 pt-2 mb-4\">\n            {location}\n          </h2>\n          {/*<REVIEW>\u0421\u0442\u0438\u043b\u0438 className \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c\u043d\u044b\u043c\u0438</REVIEW>  */}\n          <div className=\"flex flex-col gap-2\">\n            {appointments.map((appointment) => (\n              <AppointmentCard key={appointment.id} appointment={appointment} />\n            ))}\n          </div>\n        </Container>\n      )\n    },\n  )\n\n  return (\n    <>\n      {appointmentsJsx}\n      <StickyActions>\n        <ButtonLink to={routes.appointmentCreate} fluid={true}>\n          \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u044c\n        </ButtonLink>\n      </StickyActions>\n    </>\n  )\n}"}
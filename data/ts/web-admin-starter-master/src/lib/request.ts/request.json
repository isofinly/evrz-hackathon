{"start_line": 40, "code": "request = async ({\n\n  url,\n\n  method = 'get',\n\n  body,\n\n  file,\n\n//<REVIEW>\u041f\u043e \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0430\u043c \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 - \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 any \u0441\u0442\u043e\u0438\u0442 \u0438\u0437\u0431\u0435\u0433\u0430\u0442\u044c. \u0412\u043c\u0435\u0441\u0442\u043e \u044d\u0442\u043e\u0433\u043e - \u043f\u0440\u043e\u0442\u0438\u043f\u0438\u0437\u0438\u0440\u0443\u0439\u0442\u0435 \u0434\u0436\u0435\u043d\u0435\u0440\u0438\u043a</REVIEW>\n}: RequestProps): Promise<any> => {\n  const fetchUrl = SERVER_ENDPOINT + url;\n\n  const headers = {\n    ...(!file && { 'Content-Type': 'application/json' }),\n    Accept: 'application/json',\n  };\n\n  const fetchOptions = {\n    headers,\n    method,\n    ...(body && { body: JSON.stringify(body) }),\n    ...(file && { body: attachFormData(file) }),\n  };\n\n  const response = await fetch(fetchUrl, fetchOptions);\n\n  const meta = {\n    code: response.status,\n    url,\n    method,\n  };\n\n  let result = {};\n\n  if (response.headers.get('Content-Type')?.includes('application/json')) {\n    result = await response.json();\n  }\n\n  const resBody: FailResponse | SuccessResponse = {\n    payload: result,\n    ...meta,\n  };\n\n  if (response.ok) return resBody;\n\n  throw resBody;\n}"}
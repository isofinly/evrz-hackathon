{"start_line": 0, "code": "import { cache, createQuery } from '@farfetched/core';\n\nimport { runtypeContract } from '@farfetched/runtypes';\n\nimport { createDomain } from 'effector';\n\nimport { Array } from 'runtypes';\n\n\nimport { Comment, comment, commentsApi } from '@/shared/api';\n\nimport { dataExtractor } from '@/shared/lib';\n\nimport { getStandardResponse } from '@/shared/types';\n\n\n// <REVIEW>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u043e\u043c\u0435\u043d\u0430 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043f\u043e \u043f\u0443\u0442\u0438 /src/Model/{\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435}/state.ts </REVIEW>\nconst commentsDomain = createDomain();\n\n\n// <REVIEW>\u0435\u0444\u0444\u0435\u043a\u0442 \u0434\u043e\u043b\u0436\u043d \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442\u044c \u0432 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u043f\u043e \u043f\u0443\u0442\u0438 /src/Model/{\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435}/effects/effect.ts</REVIEW>\nconst handlerFx = commentsDomain.effect(commentsApi.getAll);\n\n\n// <REVIEW>\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0432 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u043f\u043e \u043f\u0443\u0442\u0438 /src/Model/{\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435}/effects/effect.ts</REVIEW>\nexport const query = createQuery({\n\n\tinitialData: [] as Comment[],\n\n\teffect: handlerFx,\n\n\tcontract: runtypeContract(getStandardResponse(Array(comment))),\n\n\tmapData: dataExtractor,\n\n});\n\n\ncache(query);\n"}
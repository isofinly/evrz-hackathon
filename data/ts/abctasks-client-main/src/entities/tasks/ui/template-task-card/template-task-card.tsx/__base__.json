{"start_line": 0, "code": "// <REVIEW>\u0414\u0430\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0439 \u0438 \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u043e \u043f\u0443\u0442\u0438\"/src/Components/{\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043f\u043a\u0438}/{\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430}.tsx\"</REVIEW>\n// <REVIEW>\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 CamelCase</REVIEW>\n\n// <REVIEW>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 ui \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a \u043d\u0430 \u043f\u043e\u0434\u043e\u0431\u0438\u0438 material \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043e</REVIEW>\nimport {\n\n\tCard,\n\n\tCardActions,\n\n\tCardContent,\n\n\tCardHeader,\n\n\tCardProps,\n\n\tTypography,\n\n} from '@mui/material';\n\nimport cn from 'classnames';\n\nimport * as React from 'react';\n\n\nimport { Task } from '@/shared/api';\n\nimport { CommonProps, Slots } from '@/shared/types';\n\nimport { DateTime } from '@/shared/ui';\n\n\nimport styles from './template-task-card.module.css';\n\n\n// <REVIEW>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0441\u0430 \u0438\u043b\u0438 \u0442\u0438\u043f\u0430 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0432 \u0444\u0430\u0439\u043b\u0435 types.ts \u043d\u0430 \u043e\u0434\u043d\u043e\u043c \u0443\u0440\u043e\u0432\u043d\u0435 \u0441 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0439</REVIEW>\nexport interface TemplateTaskCardProps\n\n\textends CommonProps,\n\n\t\tPick<Task, 'title' | 'description' | 'createdAt' | 'status' | 'id'>,\n\n\t\tOmit<CardProps, keyof Task> <BODY TemplateTaskCardProps\n>\n\nexport const TemplateTaskCard: React.FC<TemplateTaskCardProps> = React.memo(\n\n\t(props) => {\n\n\t\tconst { className, createdAt, slots, title, description, ...rest } = props;\n\n\n\t\tconst { actions, tags, userAvatar } = slots;\n\n\n\t\treturn (\n\n\t\t\t<Card\n\n\t\t\t\tclassName={cn(styles.card, className)}\n\n\t\t\t\tvariant='outlined'\n\n\t\t\t\tcomponent='article'\n\n\t\t\t\t{...rest}>\n\n\t\t\t\t<CardHeader\n\n\t\t\t\t\tclassName={styles.header}\n\n\t\t\t\t\taction={actions}\n\n\t\t\t\t\ttitle={\n\n\t\t\t\t\t\t<Typography variant='h5' component='h3'>\n\n\t\t\t\t\t\t\t{title}\n\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t}\n\n\t\t\t\t\tsubheader={tags}\n\n\t\t\t\t\tdisableTypography\n\n\t\t\t\t/>\n\n\t\t\t\t<CardContent className={styles.content}>\n\n\t\t\t\t\t<Typography className={styles.description} variant='body1'>\n\n\t\t\t\t\t\t{description}\n\n\t\t\t\t\t</Typography>\n\n\t\t\t\t</CardContent>\n\n\t\t\t\t<CardActions className={styles.actions}>\n\n\t\t\t\t\t{userAvatar}\n\n\t\t\t\t\t<DateTime date={createdAt} format='HH:mm DD MMM' />\n\n\t\t\t\t</CardActions>\n\n\t\t\t</Card>\n\n\t\t);\n\n\t}\n\n);\n"}
{"start_line": 0, "code": "import { Literal, Number, Record, Static, Union } from 'runtypes';\n\n\nimport { InRoomParams, StandardResponse } from '@/shared/types';\n\n\nimport { user } from '../auth';\n\nimport { room } from '../rooms';\n\n\nexport const invitationStatus = Union(\n\n\tLiteral('sended'),\n\n\tLiteral('approved'),\n\n\tLiteral('rejected')\n\n);\n\n\nexport type InvitationStatus = Static<typeof invitationStatus>;\n\n\nexport const invitation = Record({\n\n\tid: Number,\n\n\troom,\n\n\tuser: user.nullable(),\n\n\tinviter: user,\n\n\tstatus: invitationStatus,\n\n});\n\n\nexport interface Invitation extends Static<typeof invitation> <BODY Invitation>\n\nexport type GetAllInvitationsRequestParams = InRoomParams;\n\n\nexport type GetAllInvitationsResponseData = Promise<\n\n\tStandardResponse<Invitation[]>\n\n>;\n\n\nexport interface GetInvitationViaTokenRequestParams <BODY GetInvitationViaTokenRequestParams>\n\nexport type GetInvitationViaTokenResponseData = Promise<\n\n\tStandardResponse<Invitation>\n\n>;\n\n\nexport type GenerateLinkRequestParams = InRoomParams;\n\n\nexport type GenerateLinkResponseData = Promise<StandardResponse<string>>;\n\n\nexport interface InviteUserRequestParams extends InRoomParams <BODY InviteUserRequestParams>\n\nexport type InviteUserResponseData = Promise<StandardResponse<Invitation>>;\n\n\nexport interface ApproveInvitationRequestParams <BODY ApproveInvitationRequestParams>\n\nexport type ApproveInvitationResponseData = Promise<StandardResponse<boolean>>;\n\n\nexport interface RejectInvitationRequestParams <BODY RejectInvitationRequestParams>\n\nexport type RejectInvitationResponseData = Promise<StandardResponse<boolean>>;\n\n\nexport interface RemoveInvitationRequestParams extends InRoomParams <BODY RemoveInvitationRequestParams>\n\nexport type RemoveInvitationResponseData = Promise<StandardResponse<boolean>>;\n"}
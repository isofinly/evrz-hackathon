{"start_line": 0, "code": "import ky from 'ky';\n\n\nimport { StandardResponse } from '@/shared/types';\n\n\nimport { api } from '../../configs';\n\n\nimport { Tokens } from './types';\n\n\nlet token: string | null = null;\n\n\nexport const instance = ky.create({\n\n\tmode: 'cors',\n\n\tprefixUrl: api,\n\n\thooks: {\n\n\t\tbeforeRequest: [\n\n\t\t\t(request) => {\n\n\t\t\t\tif (!token) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif (request.headers.get('authorization')) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\n\t\t\t\trequest.headers.set('authorization', `Bearer ${token}`);\n\n\t\t\t}\n\n\t\t],\n\n\t\tafterResponse: [\n\n\t\t\t(request) => {\n\n\t\t\t\tconst isLogout = request.url.includes('logout');\n\n\n\t\t\t\tif (isLogout) {\n\n\t\t\t\t\ttoken = null;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tasync (_request, options, response) => {\n\n\t\t\t\tif (!response.ok) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\n\t\t\t\tconst body = await response.json();\n\n\n\t\t\t\tif (\n\n\t\t\t\t\t!('data' in body) ||\n\n\t\t\t\t\ttypeof body.data !== 'object' ||\n\n\t\t\t\t\tbody.data === null\n\n\t\t\t\t) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif (!('tokens' in body.data)) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif (!('accessToken' in body.data.tokens)) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\n\t\t\t\ttoken = body.data.tokens.accessToken;\n\n\t\t\t},\n\n\n\t\t\tasync (request, options, response) => {\n\n\t\t\t\tif (response.status !== 401) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\n\t\t\t\tconst { data: tokens, } = await instance\n\n\t\t\t\t\t.get('auth/refresh', { credentials: 'include', })\n\n\t\t\t\t\t.json<StandardResponse<Tokens>>();\n\n\n\t\t\t\ttoken = tokens.accessToken;\n\n\n\t\t\t\trequest.headers.set('authorization', `Bearer ${token}`);\n\n\n\t\t\t\treturn ky(request);\n\n\t\t\t}\n\n\t\t],\n\n\t},\n\n});\n"}
{"start_line": 0, "code": "// <REVIEW>\u0414\u0430\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0439 \u0438 \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u043e \u043f\u0443\u0442\u0438\"/src/Components/{\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043f\u043a\u0438}/{\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430}.tsx\"</REVIEW>\n// <REVIEW>\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 CamelCase</REVIEW>\n\n// <REVIEW>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 ui \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a \u043d\u0430 \u043f\u043e\u0434\u043e\u0431\u0438\u0438 material \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043e</REVIEW>\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\n\n// <REVIEW>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 ui \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a \u043d\u0430 \u043f\u043e\u0434\u043e\u0431\u0438\u0438 material \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043e</REVIEW>\nimport { IconButton, PopoverOrigin, PopoverPosition } from '@mui/material';\n\n// <REVIEW>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 ui \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a \u043d\u0430 \u043f\u043e\u0434\u043e\u0431\u0438\u0438 material \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043e</REVIEW>\nimport { CommonProps } from '@mui/material/OverridableComponent';\n\nimport * as React from 'react';\n\n\nimport { useToggle } from '@/shared/lib';\n\nimport { Size } from '@/shared/types';\n\n\nimport { Menu } from '../menu';\n\n// <REVIEW>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0441\u0430 \u0438\u043b\u0438 \u0442\u0438\u043f\u0430 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0432 \u0444\u0430\u0439\u043b\u0435 types.ts \u043d\u0430 \u043e\u0434\u043d\u043e\u043c \u0443\u0440\u043e\u0432\u043d\u0435 \u0441 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0439</REVIEW>\nexport interface EditMenuProps extends CommonProps, React.PropsWithChildren <BODY EditMenuProps>\n\nexport const EditMenu: React.FC<EditMenuProps> = React.memo((props) => {\n\n\tconst {\n\n\t\tclassName,\n\n\t\tsize,\n\n\t\tchildren,\n\n\t\tanchorOrigin,\n\n\t\tanchorPosition,\n\n\t\ttransformOrigin,\n\n\t} = props;\n\n\tconst [isOpen, { toggle }] = useToggle();\n\n\tconst menuId = React.useId();\n\n\tconst [reference, setReference] = React.useState<HTMLElement | null>(null);\n\n\n\tconst expanded = isOpen ? 'true' : undefined;\n\n\n\treturn (\n\n\t\t<div className={className}>\n\n\t\t\t<IconButton\n\n\t\t\t\tonClick={toggle}\n\n\t\t\t\tsize={size}\n\n\t\t\t\ttabIndex={0}\n\n\t\t\t\taria-expanded={expanded}\n\n\t\t\t\taria-haspopup='true'\n\n\t\t\t\taria-controls={menuId}\n\n\t\t\t\tref={setReference}>\n\n\t\t\t\t<MoreHorizIcon />\n\n\t\t\t</IconButton>\n\n\t\t\t<Menu\n\n\t\t\t\tid={menuId}\n\n\t\t\t\tanchorEl={reference}\n\n\t\t\t\topen={isOpen}\n\n\t\t\t\tonClose={toggle}\n\n\t\t\t\tanchorPosition={anchorPosition}\n\n\t\t\t\tanchorOrigin={anchorOrigin}\n\n\t\t\t\ttransformOrigin={transformOrigin}>\n\n\t\t\t\t{children}\n\n\t\t\t</Menu>\n\n\t\t</div>\n\n\t);\n\n});\n"}
{"start_line": 28, "code": "FiltersPopover: React.FC<FiltersPopoverProps> = (props) => {\n\tconst { title, open, onClose, onOpen, icon, children, className, slots } =\n\t\tprops;\n\n\tconst [ref, setRef] = React.useState<HTMLElement | null>(null);\n\tconst titleId = React.useId();\n\tconst popupId = React.useId();\n\n\tconst [isMobile, isVertical] = useUnit([\n\t\tdeviceInfoModel.$isMobile,\n\t\tdeviceInfoModel.$isTabletVertical,\n\t]);\n\n\tconst isPopup = isMobile || isVertical;\n\n\tconst child = React.createElement(children, { isPopup, titleId });\n\n\tlet content: React.ReactElement;\n\n\tif (isPopup) {\n\t\tcontent = (\n\t\t\t<FullWidthPopup\n\t\t\t\tid={popupId}\n\t\t\t\tisOpen={open}\n\t\t\t\tonClose={onClose}\n\t\t\t\ttitle={title}\n\t\t\t\tslots={slots}\n\t\t\t\tDialogTitleProps={{\n\t\t\t\t\tid: titleId,\n\t\t\t\t}}>\n\t\t\t\t{child}\n\t\t\t</FullWidthPopup>\n\t\t);\n\t} else {\n\t\tcontent = (\n\t\t\t<Popover\n\t\t\t\tid={popupId}\n\t\t\t\topen={open}\n\t\t\t\tonClose={onClose}\n\t\t\t\tanchorEl={ref}\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t\tvertical: 'bottom',\n\t\t\t\t}}\n\t\t\t\ttransformOrigin={{\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t}}>\n\t\t\t\t<Typography id={titleId} className='visibility-hidden' component='p'>\n\t\t\t\t\t{title}\n\t\t\t\t</Typography>\n\t\t\t\t{child}\n\t\t\t</Popover>\n\t\t);\n\t}\n\n\t/**\n\t * @todo\n\t * Add aria-label for button\n\t */\n\n\treturn (\n\t\t<>\n\t\t\t<Tooltip title={title}>\n\t\t\t\t<IconButton\n\t\t\t\t\tclassName={className}\n\t\t\t\t\tonClick={open ? onClose : onOpen}\n\t\t\t\t\taria-expanded={open}\n\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\taria-controls={popupId}\n\t\t\t\t\tref={setRef}>\n\t\t\t\t\t{icon}\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t\t{content}\n\t\t</>\n\t);\n}"}
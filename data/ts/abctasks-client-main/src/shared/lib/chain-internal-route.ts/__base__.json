{"query": "\nimport {\n\n\tRouteInstance,\n\n\tRouteParams,\n\n\tRouteParamsAndQuery,\n\n\tchainRoute,\n\n} from 'atomic-router';\n\nimport { Event, Store, createEvent, sample } from 'effector';\n\nimport { not } from 'patronum';\n\n\nimport { ChainedParams } from '../types';\n\n\nexport interface ChainInternalRouteParams extends ChainedParams <BODY ChainInternalRouteParams>\n\nexport const chainInternalRoute = <Params extends RouteParams>(\n\n\troute: RouteInstance<Params>,\n\n\toptions: ChainInternalRouteParams\n\n): RouteInstance<Params> => <BODY chainInternalRoute>;\n", "answer": "{\"1\": \"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 CamelCase\",\n\"0\": \"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0441\u0430 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0432 \u0444\u0430\u0439\u043b\u0435 types.ts \u0441 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u043c\"}"}
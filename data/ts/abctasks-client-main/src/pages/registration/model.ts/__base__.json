{"start_line": 0, "code": "import { redirect } from 'atomic-router';\n\nimport { sample } from 'effector';\n\n\nimport { registrationModel } from '@/features/auth';\n\n\nimport { routes } from '@/shared/configs';\n\nimport { internalRoutingModel, sessionModel } from '@/shared/models';\n\n\nexport const currentRoute = routes.registration.base;\n\nexport const anonymousRoute = sessionModel.chainAnonymous(currentRoute, {\n\n\totherwise: routes.rooms.base.open,\n\n});\n\n\nsample({\n\n\tclock: anonymousRoute.closed,\n\n\ttarget: registrationModel.form.reset,\n\n});\n\n\nsample({\n\n\tclock: registrationModel.mutation.finished.success,\n\n\ttarget: internalRoutingModel.$internalRoute.enable,\n\n});\n\n\nredirect({\n\n\tclock: registrationModel.mutation.finished.success,\n\n\tquery: ({ params, }) => {\n\n\t\treturn {\n\n\t\t\temail: params.email,\n\n\t\t\tusername: params.username,\n\n\t\t};\n\n\t},\n\n\troute: routes.registration.thanks,\n\n});\n"}
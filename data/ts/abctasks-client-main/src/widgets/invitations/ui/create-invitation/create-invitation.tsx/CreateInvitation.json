{"start_line": 33, "code": "CreateInvitation: React.FC<CreateInvitationProps> = (props) => {\n\tconst [tab, setTab] = React.useState('invite_user');\n\tconst { t } = useTranslation('room-invitations');\n\tconst roomId = useParam(routes.room.users, 'id');\n\n\tconst close = useUnit(createInvitationModel.popupControls.close);\n\n\tconst [isVertical, isMobile] = useUnit([\n\t\tdeviceInfoModel.$isTabletVertical,\n\t\tdeviceInfoModel.$isMobile,\n\t]);\n\n\tconst fullscreenPopup = isVertical || isMobile;\n\n\tconst translation = t('actions', { returnObjects: true }) as Record<\n\t\tstring,\n\t\tany\n\t>;\n\n\tconst { title } = translation[tab];\n\n\tconst onChange = React.useCallback((_evt: unknown, value: string) => {\n\t\tsetTab(value);\n\t}, []);\n\n\tconst Popup = fullscreenPopup ? FullWidthPopup : MainPopup;\n\n\treturn (\n\t\t<Popup {...props} title={title} onClose={close}>\n\t\t\t<TabContext value={tab}>\n\t\t\t\t<TabList onChange={onChange} variant='fullWidth' scrollButtons='auto'>\n\t\t\t\t\t<Tab\n\t\t\t\t\t\ticon={<AddLinkIcon />}\n\t\t\t\t\t\ticonPosition='start'\n\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\tfullscreenPopup ? null : translation.generate_link.title_short\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue='generate_link'\n\t\t\t\t\t/>\n\t\t\t\t\t<Tab\n\t\t\t\t\t\ticon={<PersonAddIcon />}\n\t\t\t\t\t\ticonPosition='start'\n\t\t\t\t\t\tlabel={fullscreenPopup ? null : translation.invite_user.title_short}\n\t\t\t\t\t\tvalue='invite_user'\n\t\t\t\t\t/>\n\t\t\t\t</TabList>\n\t\t\t\t<TabPanel className={styles.tab} value='generate_link'>\n\t\t\t\t\t<GenerateInvitationLink roomId={roomId} />\n\t\t\t\t</TabPanel>\n\t\t\t\t<TabPanel className={styles.tab} value='invite_user'>\n\t\t\t\t\t<InviteUserIntoRoom />\n\t\t\t\t</TabPanel>\n\t\t\t</TabContext>\n\t\t</Popup>\n\t);\n}"}
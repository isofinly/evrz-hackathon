{"query": "\nimport cn from 'classnames';\n\nimport { useUnit } from 'effector-react';\n\nimport * as React from 'react';\n\n\nimport {\n\n\tOpenUpdateTaskFormMenuItem,\n\n\tRemoveTaskMenuItem,\n\n} from '@/features/tasks';\n\n\nimport { TagLabel, SkeletonTagLabel } from '@/entities/tags';\n\nimport { TemplateTaskCard } from '@/entities/tasks';\n\nimport { UserAvatar } from '@/entities/users';\n\n\nimport { Task } from '@/shared/api';\n\nimport { getEmptyArray } from '@/shared/configs';\n\nimport { CommonProps } from '@/shared/types';\n\nimport { EditMenu } from '@/shared/ui';\n\n\nimport { useTaskCardIsDrag } from '../../lib';\n\nimport { dragTaskModel } from '../../model';\n\n\nimport styles from './task-card.module.css';\n\n\nexport interface TaskCardProps extends CommonProps, Task <BODY TaskCardProps>\n\nexport const TaskCard: React.FC<TaskCardProps> = React.memo((props) => {\n\n\tconst { tags, id, roomId, className, status, author, ...rest } = props;\n\n\tconst [onDragEnd, onDragStart] = useUnit([\n\n\t\tdragTaskModel.dragEnded,\n\n\t\tdragTaskModel.dragStarted,\n\n\t]);\n\n\tconst isDrag = useTaskCardIsDrag(id);\n\n\n\tconst actions = <CardMenu roomId={roomId} taskId={id} />;\n\n\tconst tagElements =\n\n\t\ttags.length > 0\n\n\t\t\t? tags.map((tag) => <TagLabel {...tag} key={tag.id} />)\n\n\t\t\t: getEmptyArray(2).map((_, i) => <SkeletonTagLabel key={i} />);\n\n\n\tconst userAvatar = <UserAvatar {...author} size={24} />;\n\n\n\treturn (\n\n\t\t<TemplateTaskCard\n\n\t\t\tclassName={cn(styles.card, { [styles.drag]: isDrag }, className)}\n\n\t\t\t{...rest}\n\n\t\t\tslots={{\n\n\t\t\t\tactions,\n\n\t\t\t\tuserAvatar,\n\n\t\t\t\ttags: <div className={styles.tags}>{tagElements}</div>,\n\n\t\t\t}}\n\n\t\t\tid={id}\n\n\t\t\tstatus={status}\n\n\t\t\tonDragStart={onDragStart}\n\n\t\t\tonDragEnd={onDragEnd}\n\n\t\t\tdata-id={id}\n\n\t\t\tdata-status={status}\n\n\t\t\tdraggable\n\n\t\t/>\n\n\t);\n\n});\n\n\ninterface CardMenuProps <BODY CardMenuProps>\n\nconst CardMenu: React.FC<CardMenuProps> = (props) => <BODY CardMenu>;\n", "answer": "{\"1\": \"\u0414\u0430\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u043e\u043c \u0438 \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u043e \u043f\u0443\u0442\u0438\"/src/Containers/{\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043f\u043a\u0438}/{\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430}.tsx\"\",\n\"0\": \"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 CamelCase\",\n\"0\": \"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0441\u0430 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0432 \u0444\u0430\u0439\u043b\u0435 types.ts \u043d\u0430 \u043e\u0434\u043d\u043e\u043c \u0443\u0440\u043e\u0432\u043d\u0435 \u0441 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0439\",\n\"41\": \"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0441\u0430 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0432 \u0444\u0430\u0439\u043b\u0435 types.ts \u043d\u0430 \u043e\u0434\u043d\u043e\u043c \u0443\u0440\u043e\u0432\u043d\u0435 \u0441 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0439\"}"}
{"start_line": 33, "code": "TaskColumn: React.FC<TaskColumnProps> = (props) => {\n\tconst { tasks, className, columnStatus, hasActions, header, isLoading } =\n\t\tprops;\n\tconst id = React.useId();\n\n\tconst onDrop = useUnit(dragTaskModel.drop);\n\n\tlet items: React.ReactElement[];\n\n\tif (isLoading) {\n\t\titems = getEmptyArray(4).map((_, i) => <SkeletonTaskCard key={i} />);\n\t} else {\n\t\titems = tasks.map((task) => {\n\t\t\treturn <TaskCard {...task} key={task.id} />;\n\t\t});\n\t}\n\n\tconst headerActions = hasActions ? (\n\t\t<OpenCreateTaskButton columnStatus={columnStatus} />\n\t) : null;\n\n\t/**\n\t * @todo\n\t * Should I make it ul list?\n\t */\n\treturn (\n\t\t<Stack\n\t\t\tclassName={cn(styles.wrapper, className)}\n\t\t\tspacing={1}\n\t\t\tonDrop={onDrop}\n\t\t\tonDragOver={onDragOver}\n\t\t\tdata-status={columnStatus}\n\t\t\taria-labelledby={id}\n\t\t\tcomponent='section'>\n\t\t\t<TaskColumnHeader id={id} slots={{ actions: headerActions }}>\n\t\t\t\t{header}\n\t\t\t</TaskColumnHeader>\n\t\t\t<Stack className={styles.list} spacing={1} role='group'>\n\t\t\t\t{items}\n\t\t\t</Stack>\n\t\t</Stack>\n\t);\n}"}
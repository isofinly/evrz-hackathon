{"start_line": 0, "code": "import { createDomain, sample } from 'effector';\n\nimport { DragEvent } from 'react';\n\n\nimport { TaskStatus } from '@/shared/api';\n\n\nconst dragTaskDomain = createDomain();\n\n\nexport const $id = dragTaskDomain.store<number | null>(null);\n\nexport const $startColumn = dragTaskDomain.store<TaskStatus | null>(null);\n\n\nexport const dragStarted = dragTaskDomain.event<DragEvent<HTMLDivElement>>();\n\nexport const dragEnded = dragTaskDomain.event<DragEvent<HTMLDivElement>>();\n\nexport const drop = dragTaskDomain.event<DragEvent<HTMLDivElement>>();\n\nexport const dropped = dragTaskDomain.event<DragEvent<HTMLDivElement>>();\n\n\nsample({\n\n\tclock: dragStarted,\n\n\tfn: (evt) => {\n\n\t\tconst id = Number(evt.currentTarget.dataset.id);\n\n\t\treturn Number.isNaN(id) ? null : id;\n\n\t},\n\n\ttarget: $id,\n\n});\n\n\nsample({\n\n\tclock: dragStarted,\n\n\tfn: (evt) => {\n\n\t\treturn (evt.currentTarget.dataset.status as TaskStatus) ?? null;\n\n\t},\n\n\ttarget: $startColumn,\n\n});\n\n\nsample({\n\n\tclock: drop,\n\n\tsource: {\n\n\t\tid: $id,\n\n\t\tstartColumn: $startColumn,\n\n\t},\n\n\tfilter: ({ id, startColumn, }, evt) => {\n\n\t\tconst { status, } = evt.currentTarget.dataset;\n\n\t\treturn id !== null && startColumn !== status && !!status;\n\n\t},\n\n\tfn: (_, evt) => evt,\n\n\ttarget: dropped,\n\n});\n\n\nsample({\n\n\tclock: dragEnded,\n\n\tfn: () => null,\n\n\ttarget: [$id, $startColumn],\n\n});\n"}
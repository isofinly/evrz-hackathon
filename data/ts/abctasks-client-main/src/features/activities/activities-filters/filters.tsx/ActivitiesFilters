ActivitiesFilters: React.FC<ActivitiesFiltersProps> = (props) => {
	const { className } = props;
	// <REVIEW>переменная должна иметь явный смысл в своем названии</REVIEW>
	const { t } = useTranslation('room-activities');

	const [open, { toggleOff, toggleOn }] = useToggle();
	const [reset, submit] = useUnit([form.reset, form.submit]);

	const onSubmit = usePreventDefault(() => {
		submit();
		toggleOff();
	});

	const onReset = () => {
		reset();
		toggleOff();
	};

	const title = t('actions.filter_activities.title');
	const actions = t('actions.filter_activities.actions', {
		returnObjects: true,
	}) as Record<string, string>;

	const buttons = (
		<>
			<Button
				className={styles.reset}
				onClick={onReset}
				type='reset'
				variant='text'
				color='primary'>
				{actions.reset}
			</Button>
			<Button
				className={styles.submit}
				onClick={onSubmit}
				type='submit'
				variant='contained'>
				{actions.submit}
			</Button>
		</>
	);

	return (
		<FiltersPopover
			open={open}
			onOpen={toggleOn}
			onClose={toggleOff}
			title={title}
			icon={<TuneIcon />}
			slots={{ actions: buttons }}>
			{({ isPopup, titleId }) => (
				<form
					className={cn(styles.form, className)}
					onSubmit={onSubmit}
					aria-labelledby={titleId}>
					<Action />
					<Spheres />
					<Users />
					<After />
					<Before />
					<Show show={!isPopup}> {buttons}</Show>
				</form>
			)}
		</FiltersPopover>
	);
}
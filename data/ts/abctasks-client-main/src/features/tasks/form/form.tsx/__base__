import { Button } from '@mui/material';
import cn from 'classnames';
import { Form } from 'effector-forms';
import { useUnit } from 'effector-react';
import * as React from 'react';
import { useTranslation } from 'react-i18next';

import { TagPicker } from '@/entities/tags';
import { StatusSelect } from '@/entities/tasks';

import { usePreventDefault } from '@/shared/lib';
import { CommonProps } from '@/shared/types';
import { Field } from '@/shared/ui';

import styles from './form.module.css';
import { TaskFormValues } from './lib';

export interface TaskFormProps extends CommonProps <BODY TaskFormProps>

export const TaskForm: React.FC<TaskFormProps> = React.memo((props) => {
	const { buttonText, className, $form, hideButton, buttonDisabled, } = props;
	const submit = useUnit($form.submit);

	const onSubmit = usePreventDefault(submit);

	return (
		<form className={cn(styles.form, className)} onSubmit={onSubmit}>
			<Title $form={$form} />
			<Tags $form={$form} />
			<Status $form={$form} />
			<Description $form={$form} />
			{hideButton ? null : (
				<Button
					className={styles.button}
					type='submit'
					disabled={buttonDisabled}>
					{buttonText}
				</Button>
			)}
		</form>
	);
});

interface FieldProps <BODY FieldProps>

const Title: React.FC<FieldProps> = (props) => <BODY Title>;

const Tags: React.FC<FieldProps> = (props) => <BODY Tags>;

const Status: React.FC<FieldProps> = (props) => <BODY Status>;

const Description: React.FC<FieldProps> = (props) => <BODY Description>;
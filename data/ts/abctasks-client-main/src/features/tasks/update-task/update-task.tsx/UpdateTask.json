{"start_line": 18, "code": "UpdateTask: React.FC<UpdateTaskProps> = (props) => {\n\tconst { t, } = useTranslation('tasks');\n\tconst onClose = useUnit(popupControls.close);\n\tconst { data: task, } = useUnit(taskModel.query);\n\n\tconst [isMobile, isVertical] = useUnit([\n\t\tdeviceInfoModel.$isMobile,\n\t\tdeviceInfoModel.$isTabletVertical\n\t]);\n\n\tconst onClick = useUnit(form.submit);\n\tconst pending = useUnit(mutation.$pending);\n\n\tconst isFullscreen = isMobile || isVertical;\n\n\tconst Popup = isFullscreen ? FullWidthPopup : MainPopup;\n\n\tconst loading = !task;\n\n\tconst buttonText = t('actions.save', { ns: 'common', });\n\tconst title = t('actions.update_task.title');\n\tconst actions = isFullscreen ? (\n\t\t<Button type='submit' onClick={onClick}>\n\t\t\t{buttonText}\n\t\t</Button>\n\t) : null;\n\n\treturn (\n\t\t<Popup {...props} onClose={onClose} title={title} slots={{ actions, }}>\n\t\t\t{loading ? (\n\t\t\t\t<SkeletonTaskForm className={styles.taskForm} />\n\t\t\t) : (\n\t\t\t\t<TaskForm\n\t\t\t\t\tclassName={styles.taskForm}\n\t\t\t\t\tbuttonText={buttonText}\n\t\t\t\t\t$form={form}\n\t\t\t\t\tbuttonDisabled={pending}\n\t\t\t\t\thideButton={isFullscreen}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Popup>\n\t);\n}"}
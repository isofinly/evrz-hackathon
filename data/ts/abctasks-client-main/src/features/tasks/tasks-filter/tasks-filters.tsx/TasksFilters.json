{"start_line": 19, "code": "TasksFilters: React.FC<TasksFiltersProps> = (props) => {\n\tconst { className, } = props;\n\tconst { t, } = useTranslation('tasks');\n\n\tconst [open, { toggleOn, toggleOff, }] = useToggle();\n\tconst reset = useUnit(form.reset);\n\tconst submit = useUnit(form.submit);\n\n\tconst onSubmit = usePreventDefault(() => {\n\t\tsubmit();\n\t\ttoggleOff();\n\t});\n\n\tconst onReset = () => {\n\t\treset();\n\t\ttoggleOff();\n\t};\n\n\tconst buttonsText = t('actions.tasks_filters.actions', {\n\t\treturnObjects: true,\n\t}) as Record<string, string>;\n\tconst title = t('actions.tasks_filters.title');\n\n\tconst buttons = (\n\t\t<>\n\t\t\t<Button onClick={onReset} type='reset' variant='text' color='primary'>\n\t\t\t\t{buttonsText.reset}\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tonClick={onSubmit}\n\t\t\t\ttype='submit'\n\t\t\t\tvariant='contained'\n\t\t\t\tcolor='primary'>\n\t\t\t\t{buttonsText.submit}\n\t\t\t</Button>\n\t\t</>\n\t);\n\n\treturn (\n\t\t<FiltersPopover\n\t\t\ttitle={title}\n\t\t\topen={open}\n\t\t\tonClose={toggleOff}\n\t\t\tonOpen={toggleOn}\n\t\t\ticon={<TuneIcon />}\n\t\t\tslots={{ actions: buttons, }}>\n\t\t\t{({ isPopup, }) => (\n\t\t\t\t<form className={cn(styles.wrapper, className)} onSubmit={onSubmit}>\n\t\t\t\t\t<Tags />\n\t\t\t\t\t<Users />\n\t\t\t\t\t<After />\n\t\t\t\t\t<Before />\n\t\t\t\t\t<Show show={!isPopup}>{buttons}</Show>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</FiltersPopover>\n\t);\n}"}
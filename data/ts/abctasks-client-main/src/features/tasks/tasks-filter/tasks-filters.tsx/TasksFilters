TasksFilters: React.FC<TasksFiltersProps> = (props) => {
	const { className, } = props;
	const { t, } = useTranslation('tasks');

	const [open, { toggleOn, toggleOff, }] = useToggle();
	const reset = useUnit(form.reset);
	const submit = useUnit(form.submit);

	const onSubmit = usePreventDefault(() => {
		submit();
		toggleOff();
	});

	const onReset = () => {
		reset();
		toggleOff();
	};

	const buttonsText = t('actions.tasks_filters.actions', {
		returnObjects: true,
	}) as Record<string, string>;
	const title = t('actions.tasks_filters.title');

	const buttons = (
		<>
			<Button onClick={onReset} type='reset' variant='text' color='primary'>
				{buttonsText.reset}
			</Button>
			<Button
				onClick={onSubmit}
				type='submit'
				variant='contained'
				color='primary'>
				{buttonsText.submit}
			</Button>
		</>
	);

	return (
		<FiltersPopover
			title={title}
			open={open}
			onClose={toggleOff}
			onOpen={toggleOn}
			icon={<TuneIcon />}
			slots={{ actions: buttons, }}>
			{({ isPopup, }) => (
				<form className={cn(styles.wrapper, className)} onSubmit={onSubmit}>
					<Tags />
					<Users />
					<After />
					<Before />
					<Show show={!isPopup}>{buttons}</Show>
				</form>
			)}
		</FiltersPopover>
	);
}
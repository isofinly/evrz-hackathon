{"start_line": 0, "code": "import { createMutation } from '@farfetched/core';\n\nimport { runtypeContract } from '@farfetched/runtypes';\n\nimport { createDomain, sample } from 'effector';\n\nimport { Literal } from 'runtypes';\n\n\nimport { authApi } from '@/shared/api';\n\nimport { sessionModel } from '@/shared/models';\n\nimport { StandardResponse, getStandardResponse } from '@/shared/types';\n\n\nconst logoutDomain = createDomain();\n\n\nconst handlerFx = logoutDomain.effect<void, StandardResponse<boolean>>(\n\n\tauthApi.logout\n\n);\n\n\nexport const mutation = createMutation<\n\n\tvoid,\n\n\tStandardResponse<boolean>,\n\n\tStandardResponse<boolean>,\n\n\tError\n\n>({\n\n\teffect: handlerFx,\n\n\tcontract: runtypeContract(getStandardResponse(Literal(true))),\n\n});\n\n\nsample({\n\n\tclock: mutation.finished.success,\n\n\tfilter: ({ result, }) => globalThis.Boolean(result.data),\n\n\ttarget: sessionModel.query.start,\n\n});\n"}
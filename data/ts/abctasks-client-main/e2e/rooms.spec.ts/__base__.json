{"start_line": 0, "code": "import { faker } from '@faker-js/faker';\n\nimport { Locator, Page, expect } from '@playwright/test';\n\n\nimport { expectAlert, getMenuItemByName } from './utils';\n\nimport { User, test } from './fixtures';\n\n\nconst getFormControls = (loc: Locator | Page, buttonText: string) => <BODY getFormControls>;\n\n\nconst getRoomCard = (\n\n\tloc: Locator | Page,\n\n\tname: string,\n\n\tdescription: string\n\n) => <BODY getRoomCard>;\n\n\ntest.describe('rooms page(online)', () => {\n\n\tlet user: User;\n\n\n\tconst name = faker.lorem.words({ min: 1, max: 3 });\n\n\tconst description = faker.lorem.words({ min: 4, max: 6 });\n\n\n\ttest.beforeEach(async ({ page, auth }) => {\n\n\t\tconst data = await auth({\n\n\t\t\temail: faker.internet.email(),\n\n\t\t});\n\n\n\t\tuser = data.user;\n\n\n\t\tawait page.goto('/rooms');\n\n\t});\n\n\n\ttest('can create room', async ({ page }) => {\n\n\t\tconst button = page.getByRole('button', {\n\n\t\t\tname: 'Open create room form',\n\n\t\t});\n\n\n\t\tawait expect(button).toBeVisible();\n\n\t\tawait button.click();\n\n\n\t\tconst dialog = page.getByRole('dialog');\n\n\t\tawait expect(dialog).toBeVisible();\n\n\t\tconst form = dialog.getByRole('form', { name: 'Create room' });\n\n\t\tawait expect(form).toBeVisible();\n\n\t\tconst controls = getFormControls(form, 'Create');\n\n\n\t\tawait expect(controls.name).toHaveValue('');\n\n\t\tawait expect(controls.description).toHaveValue('');\n\n\n\t\tawait controls.name.fill(name);\n\n\t\tawait controls.description.fill(description);\n\n\t\tawait controls.button.click();\n\n\n\t\tawait expect(form).toBeHidden();\n\n\t\tawait expectAlert({\n\n\t\t\tparent: page,\n\n\t\t\tmessage: 'Room was created successfully',\n\n\t\t\ttype: 'success',\n\n\t\t});\n\n\t\tawait expect(getRoomCard(page, name, description)).toBeVisible();\n\n\t});\n\n\n\ttest('can open room page', async ({ page, room }) => {\n\n\t\tconst created = await room({\n\n\t\t\tname,\n\n\t\t\tdescription,\n\n\t\t\townerId: user.id,\n\n\t\t});\n\n\n\t\tconst list = page.getByRole('list');\n\n\n\t\tawait expect(list).toBeVisible();\n\n\n\t\tconst card = getRoomCard(list, created.name, created.description);\n\n\t\tconst button = card.getByRole('link', { name: 'Open', exact: true });\n\n\n\t\tawait button.click();\n\n\n\t\tawait expect(page).toHaveURL(/\\/rooms\\/[\\d]+/);\n\n\t});\n\n\n\ttest('can edit room', async ({ page, room }) => {\n\n\t\tconst created = await room({\n\n\t\t\townerId: user.id,\n\n\t\t\tname,\n\n\t\t\tdescription: faker.lorem.words({ min: 4, max: 6 }),\n\n\t\t});\n\n\n\t\tconst list = page.getByRole('list');\n\n\n\t\tawait expect(list).toBeVisible();\n\n\n\t\tconst card = getRoomCard(list, created.name, created.description);\n\n\t\tconst button = card.getByRole('button');\n\n\n\t\tawait button.click();\n\n\t\tconst editRoom = getMenuItemByName(page, 'Edit room');\n\n\t\tawait editRoom.click();\n\n\t\tconst form = page.getByRole('form', { name: 'Edit room' });\n\n\t\tawait expect(form).toBeVisible();\n\n\n\t\tconst controls = getFormControls(form, 'Save');\n\n\n\t\tawait expect(controls.name).toHaveValue(created.name);\n\n\t\tawait expect(controls.description).toHaveValue(created.description);\n\n\n\t\tconst newName = faker.lorem.words({ min: 1, max: 3 });\n\n\t\tawait controls.name.fill(newName);\n\n\t\tawait controls.button.click();\n\n\n\t\tawait expect(form).toBeHidden();\n\n\t\t/**\n\t\t * @remarks\n\t\t * Need to close menu\n\t\t */\n\t\tawait expectAlert({\n\n\t\t\tparent: page,\n\n\t\t\tmessage: 'Room was updated successfully',\n\n\t\t\ttype: 'success',\n\n\t\t});\n\n\t\tawait expect(getRoomCard(page, newName, created.description)).toBeVisible();\n\n\t});\n\n\n\ttest('can remove room', async ({ page, room }) => {\n\n\t\tconst name = faker.lorem.words({ min: 4, max: 6 });\n\n\n\t\tconst created = await room({\n\n\t\t\townerId: user.id,\n\n\t\t\tname,\n\n\t\t});\n\n\n\t\tawait page.reload();\n\n\n\t\tconst list = page.getByRole('list');\n\n\n\t\tawait expect(list).toBeVisible({ timeout: 110000 });\n\n\n\t\tconst card = getRoomCard(list, created.name, created.description);\n\n\t\tconst menu = card.getByRole('button');\n\n\n\t\tawait menu.click();\n\n\t\tconst menuitem = getMenuItemByName(page, 'Remove room');\n\n\t\tawait menuitem.click();\n\n\t\tconst dialog = page.getByRole('dialog');\n\n\t\tawait expect(dialog).toBeVisible();\n\n\t\tconst cancelButton = dialog.getByRole('button', { name: 'Cancel' });\n\n\t\tawait cancelButton.click();\n\n\t\tawait expect(dialog).toBeHidden();\n\n\t\tawait menu.click();\n\n\t\tawait menuitem.click();\n\n\t\tconst removeButton = dialog.getByRole('button', { name: 'Remove' });\n\n\t\tawait removeButton.click();\n\n\n\t\tawait expect(dialog).toBeHidden();\n\n\t\tawait expectAlert({\n\n\t\t\tparent: page,\n\n\t\t\tmessage: 'Room was removed successfully',\n\n\t\t\ttype: 'success',\n\n\t\t});\n\n\t\tawait expect(\n\n\t\t\tgetRoomCard(page, created.name, created.description)\n\n\t\t).toBeHidden();\n\n\t});\n\n\n\ttest('can exit room', async ({ page, room }) => {\n\n\t\tconst name = faker.lorem.words({ min: 4, max: 6 });\n\n\t\tconst created = await room({\n\n\t\t\townerId: user.id,\n\n\t\t\tname,\n\n\t\t});\n\n\n\t\tawait page.reload();\n\n\n\t\tconst card = getRoomCard(page, created.name, created.description);\n\n\n\t\tawait expect(card).toBeVisible({ timeout: 110000 });\n\n\n\t\tconst menu = card.getByRole('button');\n\n\n\t\tawait menu.click();\n\n\t\tconst menuitem = getMenuItemByName(page, 'Exit from room');\n\n\t\tawait menuitem.click();\n\n\t\tconst dialog = page.getByRole('dialog');\n\n\t\tawait expect(dialog).toBeVisible();\n\n\t\tconst cancelButton = dialog.getByRole('button', { name: 'Cancel' });\n\n\t\tawait cancelButton.click();\n\n\t\tawait expect(dialog).toBeHidden();\n\n\t\tawait menu.click();\n\n\t\tawait menuitem.click();\n\n\t\tconst removeButton = dialog.getByRole('button', { name: 'Exit' });\n\n\t\tawait removeButton.click();\n\n\n\t\tawait expect(dialog).toBeHidden();\n\n\t\tawait expectAlert({\n\n\t\t\tparent: page,\n\n\t\t\tmessage: 'You exited from room successfully',\n\n\t\t\ttype: 'success',\n\n\t\t});\n\n\t\tawait expect(\n\n\t\t\tgetRoomCard(page, created.name, created.description)\n\n\t\t).toBeHidden();\n\n\t});\n\n});\n"}
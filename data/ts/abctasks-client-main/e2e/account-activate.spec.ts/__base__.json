{"start_line": 0, "code": "import { expect } from '@playwright/test';\n\nimport { faker } from '@faker-js/faker';\n\n\nimport { User, test } from './fixtures';\n\nimport { expectAlert } from './utils';\n\n\ntest.describe('account activate page(online)', () => {\n\n\tlet user: User;\n\n\tlet activateLink: string;\n\n\n\ttest.beforeEach(\n\n\t\tasync ({\n\n\t\t\tpage,\n\n\t\t\tuser: getUser,\n\n\t\t\tactivateAccountLink: getActivateAccountLink,\n\n\t\t}) => {\n\n\t\t\tuser = await getUser({\n\n\t\t\t\temail: faker.internet.email(),\n\n\t\t\t\tactivated: false,\n\n\t\t\t});\n\n\n\t\t\tactivateLink = await getActivateAccountLink(user);\n\n\n\t\t\tawait page.goto(activateLink);\n\n\t\t}\n\n\t);\n\n\n\ttest('has correct view', async ({ page }) => {\n\n\t\tawait expect(page).toHaveScreenshot();\n\n\t});\n\n\n\ttest('has right title', async ({ page }) => {\n\n\t\tawait expect(page).toHaveTitle(/Account activation/);\n\n\t});\n\n\n\ttest('can navigate to login page', async ({ page }) => {\n\n\t\tconst link = page.getByRole('link', { name: 'go to login page' });\n\n\n\t\tawait link.click();\n\n\n\t\tawait expect(page).toHaveURL('/login');\n\n\t});\n\n\n\ttest('cannot open if authorized', async ({ page, auth }) => {\n\n\t\tconst u = await auth({\n\n\t\t\temail: faker.internet.email(),\n\n\t\t});\n\n\n\t\tawait page.reload();\n\n\n\t\tawait expect(page).toHaveURL('/rooms');\n\n\t});\n\n\n\ttest('show error if account has been already activated', async ({\n\n\t\tpage,\n\n\t\tuser: getUser,\n\n\t\tactivateAccountLink: getActivateAccountLink,\n\n\t}) => {\n\n\t\tuser = await getUser({\n\n\t\t\temail: faker.internet.email(),\n\n\t\t\tactivated: true,\n\n\t\t});\n\n\n\t\tactivateLink = await getActivateAccountLink(user);\n\n\n\t\tawait page.goto(activateLink);\n\n\n\t\tawait expectAlert({\n\n\t\t\ttype: 'error',\n\n\t\t\tparent: page,\n\n\t\t\tmessage: 'The account has already been activated',\n\n\t\t});\n\n\t});\n\n});\n"}
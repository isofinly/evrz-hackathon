{"start_line": 0, "code": "import { faker } from '@faker-js/faker';\n\nimport { Page, expect } from '@playwright/test';\n\nimport { test } from './fixtures';\n\n\nconst getFormControls = (page: Page) => <BODY getFormControls>;\n\n\ntest.describe('registration page(online)', () => {\n\n\tconst email = faker.internet.email();\n\n\tconst password = faker.internet.password();\n\n\tconst username = faker.internet.userName();\n\n\n\ttest.beforeEach(async ({ page }) => {\n\n\t\tawait page.goto('/registration');\n\n\t});\n\n\n\ttest.afterEach(async ({ context }) => {\n\n\t\tawait context.clearCookies();\n\n\t});\n\n\n\ttest('has title', async ({ page }) => {\n\n\t\tawait expect(page).toHaveTitle('Registration');\n\n\t});\n\n\n\ttest('has correct view', async ({ page }) => {\n\n\t\tawait expect(page).toHaveScreenshot();\n\n\t});\n\n\n\ttest('has error on registered account', async ({ page, user }) => {\n\n\t\tconst registered = await user({\n\n\t\t\temail,\n\n\t\t\tpassword,\n\n\t\t});\n\n\n\t\tconst controls = getFormControls(page);\n\n\t\tawait controls.email.fill(registered.email);\n\n\t\tawait controls.username.fill(registered.username);\n\n\t\tawait controls.password.fill(password);\n\n\t\tawait controls.repeatPassword.fill(password);\n\n\t\tawait controls.button.click();\n\n\n\t\tconst error = page.getByText('User already registered');\n\n\n\t\tawait expect(error).toBeVisible();\n\n\t\tawait expect(error).toHaveCSS('color', 'rgb(211, 47, 47)');\n\n\t\tawait expect(page.locator('label', { hasText: 'Email' })).toHaveCSS(\n\n\t\t\t'color',\n\n\t\t\t'rgb(211, 47, 47)'\n\n\t\t);\n\n\t\tawait expect(controls.password).toBeEmpty();\n\n\t\tawait expect(controls.repeatPassword).toBeEmpty();\n\n\t});\n\n\n\ttest('has link into login page', async ({ page }) => {\n\n\t\tconst link = page.getByRole('link');\n\n\n\t\tawait expect(link).toBeVisible();\n\n\n\t\tawait link.click();\n\n\n\t\tawait expect(page).toHaveURL('/login');\n\n\t});\n\n\n\ttest('redirect into thanks page after success registration', async ({\n\n\t\tpage,\n\n\t\tremoveUser,\n\n\t}) => {\n\n\t\tawait removeUser({\n\n\t\t\temail,\n\n\t\t});\n\n\n\t\tconst controls = getFormControls(page);\n\n\n\t\tawait controls.email.fill(email);\n\n\t\tawait controls.username.fill(username);\n\n\t\tawait controls.password.fill(password);\n\n\t\tawait controls.repeatPassword.fill(password);\n\n\t\tawait controls.button.click();\n\n\n\t\tawait expect(page).toHaveURL(\n\n\t\t\t`/registration/thanks?` +\n\n\t\t\t\tnew URLSearchParams({\n\n\t\t\t\t\temail,\n\n\t\t\t\t\tusername,\n\n\t\t\t\t})\n\n\t\t);\n\n\t\tawait expect(page).toHaveTitle('Thanks for registration');\n\n\t\tawait expect(page.getByRole('link')).toBeVisible();\n\n\t\tawait page.getByRole('link').click();\n\n\t\tawait expect(page).toHaveURL('/login');\n\n\t});\n\n});\n"}